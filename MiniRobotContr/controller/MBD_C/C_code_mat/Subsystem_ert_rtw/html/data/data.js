var dataJson = {"arch":{"ispc":true,"isunix":false,"ismac":false},"build":"c_code_MR100/Subsystem","ref":false,"files":[{"name":"Subsystem.c","type":"source","group":"model","path":"E:\\DR_Han\\小人形关节整合\\controller\\C_code_mat\\Subsystem_ert_rtw","tag":"","groupDisplay":"模型文件","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: Subsystem.c\r\n *\r\n * Code generated for Simulink model 'Subsystem'.\r\n *\r\n * Model version                  : 1.5\r\n * Simulink Coder version         : 9.9 (R2023a) 19-Nov-2022\r\n * C/C++ source code generated on : Sat Oct 12 14:57:28 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex-M\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. RAM efficiency\r\n * Validation result: Not run\r\n */\r\n\r\n#include \"Subsystem.h\"\r\n#include \"rtwtypes.h\"\r\n#include <math.h>\r\n#include <float.h>\r\n#include <stddef.h>\r\n#define NumBitsPerChar                 8U\r\n#ifndef UCHAR_MAX\r\n#include <limits.h>\r\n#endif\r\n\r\n#if ( UCHAR_MAX != (0xFFU) ) || ( SCHAR_MAX != (0x7F) )\r\n#error Code was generated for compiler with different sized uchar/char. \\\r\nConsider adjusting Test hardware word size settings on the \\\r\nHardware Implementation pane to match your compiler word sizes as \\\r\ndefined in limits.h of the compiler. Alternatively, you can \\\r\nselect the Test hardware is the same as production hardware option and \\\r\nselect the Enable portable word sizes option on the Code Generation > \\\r\nVerification pane for ERT based targets, which will disable the \\\r\npreprocessor word size checks.\r\n#endif\r\n\r\n#if ( USHRT_MAX != (0xFFFFU) ) || ( SHRT_MAX != (0x7FFF) )\r\n#error Code was generated for compiler with different sized ushort/short. \\\r\nConsider adjusting Test hardware word size settings on the \\\r\nHardware Implementation pane to match your compiler word sizes as \\\r\ndefined in limits.h of the compiler. Alternatively, you can \\\r\nselect the Test hardware is the same as production hardware option and \\\r\nselect the Enable portable word sizes option on the Code Generation > \\\r\nVerification pane for ERT based targets, which will disable the \\\r\npreprocessor word size checks.\r\n#endif\r\n\r\n#if ( UINT_MAX != (0xFFFFFFFFU) ) || ( INT_MAX != (0x7FFFFFFF) )\r\n#error Code was generated for compiler with different sized uint/int. \\\r\nConsider adjusting Test hardware word size settings on the \\\r\nHardware Implementation pane to match your compiler word sizes as \\\r\ndefined in limits.h of the compiler. Alternatively, you can \\\r\nselect the Test hardware is the same as production hardware option and \\\r\nselect the Enable portable word sizes option on the Code Generation > \\\r\nVerification pane for ERT based targets, which will disable the \\\r\npreprocessor word size checks.\r\n#endif\r\n\r\n#if ( ULONG_MAX != (0xFFFFFFFFU) ) || ( LONG_MAX != (0x7FFFFFFF) )\r\n#error Code was generated for compiler with different sized ulong/long. \\\r\nConsider adjusting Test hardware word size settings on the \\\r\nHardware Implementation pane to match your compiler word sizes as \\\r\ndefined in limits.h of the compiler. Alternatively, you can \\\r\nselect the Test hardware is the same as production hardware option and \\\r\nselect the Enable portable word sizes option on the Code Generation > \\\r\nVerification pane for ERT based targets, which will disable the \\\r\npreprocessor word size checks.\r\n#endif\r\n\r\n/* Skipping ulong_long/long_long check: insufficient preprocessor integer range. */\r\n\r\n/* Block signals and states (default storage) */\r\nDW rtDW;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\nExtU rtU;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\nExtY rtY;\r\nextern real_T rt_modd_snf(real_T u0, real_T u1);\r\nstatic real_T rtGetNaN(void);\r\nstatic real32_T rtGetNaNF(void);\r\n\r\n#define NOT_USING_NONFINITE_LITERALS   1\r\n\r\nextern real_T rtInf;\r\nextern real_T rtMinusInf;\r\nextern real_T rtNaN;\r\nextern real32_T rtInfF;\r\nextern real32_T rtMinusInfF;\r\nextern real32_T rtNaNF;\r\nstatic void rt_InitInfAndNaN(size_t realSize);\r\nstatic boolean_T rtIsInf(real_T value);\r\nstatic boolean_T rtIsInfF(real32_T value);\r\nstatic boolean_T rtIsNaN(real_T value);\r\nstatic boolean_T rtIsNaNF(real32_T value);\r\ntypedef struct {\r\n  struct {\r\n    uint32_T wordH;\r\n    uint32_T wordL;\r\n  } words;\r\n} BigEndianIEEEDouble;\r\n\r\ntypedef struct {\r\n  struct {\r\n    uint32_T wordL;\r\n    uint32_T wordH;\r\n  } words;\r\n} LittleEndianIEEEDouble;\r\n\r\ntypedef struct {\r\n  union {\r\n    real32_T wordLreal;\r\n    uint32_T wordLuint;\r\n  } wordL;\r\n} IEEESingle;\r\n\r\nreal_T rtInf;\r\nreal_T rtMinusInf;\r\nreal_T rtNaN;\r\nreal32_T rtInfF;\r\nreal32_T rtMinusInfF;\r\nreal32_T rtNaNF;\r\nstatic real_T rtGetInf(void);\r\nstatic real32_T rtGetInfF(void);\r\nstatic real_T rtGetMinusInf(void);\r\nstatic real32_T rtGetMinusInfF(void);\r\n\r\n/*\r\n * Initialize rtNaN needed by the generated code.\r\n * NaN is initialized as non-signaling. Assumes IEEE.\r\n */\r\nstatic real_T rtGetNaN(void)\r\n{\r\n  size_t bitsPerReal = sizeof(real_T) * (NumBitsPerChar);\r\n  real_T nan = 0.0;\r\n  if (bitsPerReal == 32U) {\r\n    nan = rtGetNaNF();\r\n  } else {\r\n    union {\r\n      LittleEndianIEEEDouble bitVal;\r\n      real_T fltVal;\r\n    } tmpVal;\r\n\r\n    tmpVal.bitVal.words.wordH = 0xFFF80000U;\r\n    tmpVal.bitVal.words.wordL = 0x00000000U;\r\n    nan = tmpVal.fltVal;\r\n  }\r\n\r\n  return nan;\r\n}\r\n\r\n/*\r\n * Initialize rtNaNF needed by the generated code.\r\n * NaN is initialized as non-signaling. Assumes IEEE.\r\n */\r\nstatic real32_T rtGetNaNF(void)\r\n{\r\n  IEEESingle nanF = { { 0.0F } };\r\n\r\n  nanF.wordL.wordLuint = 0xFFC00000U;\r\n  return nanF.wordL.wordLreal;\r\n}\r\n\r\n/*\r\n * Initialize the rtInf, rtMinusInf, and rtNaN needed by the\r\n * generated code. NaN is initialized as non-signaling. Assumes IEEE.\r\n */\r\nstatic void rt_InitInfAndNaN(size_t realSize)\r\n{\r\n  (void) (realSize);\r\n  rtNaN = rtGetNaN();\r\n  rtNaNF = rtGetNaNF();\r\n  rtInf = rtGetInf();\r\n  rtInfF = rtGetInfF();\r\n  rtMinusInf = rtGetMinusInf();\r\n  rtMinusInfF = rtGetMinusInfF();\r\n}\r\n\r\n/* Test if value is infinite */\r\nstatic boolean_T rtIsInf(real_T value)\r\n{\r\n  return (boolean_T)((value==rtInf || value==rtMinusInf) ? 1U : 0U);\r\n}\r\n\r\n/* Test if single-precision value is infinite */\r\nstatic boolean_T rtIsInfF(real32_T value)\r\n{\r\n  return (boolean_T)(((value)==rtInfF || (value)==rtMinusInfF) ? 1U : 0U);\r\n}\r\n\r\n/* Test if value is not a number */\r\nstatic boolean_T rtIsNaN(real_T value)\r\n{\r\n  boolean_T result = (boolean_T) 0;\r\n  size_t bitsPerReal = sizeof(real_T) * (NumBitsPerChar);\r\n  if (bitsPerReal == 32U) {\r\n    result = rtIsNaNF((real32_T)value);\r\n  } else {\r\n    union {\r\n      LittleEndianIEEEDouble bitVal;\r\n      real_T fltVal;\r\n    } tmpVal;\r\n\r\n    tmpVal.fltVal = value;\r\n    result = (boolean_T)((tmpVal.bitVal.words.wordH & 0x7FF00000) == 0x7FF00000 &&\r\n                         ( (tmpVal.bitVal.words.wordH & 0x000FFFFF) != 0 ||\r\n                          (tmpVal.bitVal.words.wordL != 0) ));\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/* Test if single-precision value is not a number */\r\nstatic boolean_T rtIsNaNF(real32_T value)\r\n{\r\n  IEEESingle tmp;\r\n  tmp.wordL.wordLreal = value;\r\n  return (boolean_T)( (tmp.wordL.wordLuint & 0x7F800000) == 0x7F800000 &&\r\n                     (tmp.wordL.wordLuint & 0x007FFFFF) != 0 );\r\n}\r\n\r\n/*\r\n * Initialize rtInf needed by the generated code.\r\n * Inf is initialized as non-signaling. Assumes IEEE.\r\n */\r\nstatic real_T rtGetInf(void)\r\n{\r\n  size_t bitsPerReal = sizeof(real_T) * (NumBitsPerChar);\r\n  real_T inf = 0.0;\r\n  if (bitsPerReal == 32U) {\r\n    inf = rtGetInfF();\r\n  } else {\r\n    union {\r\n      LittleEndianIEEEDouble bitVal;\r\n      real_T fltVal;\r\n    } tmpVal;\r\n\r\n    tmpVal.bitVal.words.wordH = 0x7FF00000U;\r\n    tmpVal.bitVal.words.wordL = 0x00000000U;\r\n    inf = tmpVal.fltVal;\r\n  }\r\n\r\n  return inf;\r\n}\r\n\r\n/*\r\n * Initialize rtInfF needed by the generated code.\r\n * Inf is initialized as non-signaling. Assumes IEEE.\r\n */\r\nstatic real32_T rtGetInfF(void)\r\n{\r\n  IEEESingle infF;\r\n  infF.wordL.wordLuint = 0x7F800000U;\r\n  return infF.wordL.wordLreal;\r\n}\r\n\r\n/*\r\n * Initialize rtMinusInf needed by the generated code.\r\n * Inf is initialized as non-signaling. Assumes IEEE.\r\n */\r\nstatic real_T rtGetMinusInf(void)\r\n{\r\n  size_t bitsPerReal = sizeof(real_T) * (NumBitsPerChar);\r\n  real_T minf = 0.0;\r\n  if (bitsPerReal == 32U) {\r\n    minf = rtGetMinusInfF();\r\n  } else {\r\n    union {\r\n      LittleEndianIEEEDouble bitVal;\r\n      real_T fltVal;\r\n    } tmpVal;\r\n\r\n    tmpVal.bitVal.words.wordH = 0xFFF00000U;\r\n    tmpVal.bitVal.words.wordL = 0x00000000U;\r\n    minf = tmpVal.fltVal;\r\n  }\r\n\r\n  return minf;\r\n}\r\n\r\n/*\r\n * Initialize rtMinusInfF needed by the generated code.\r\n * Inf is initialized as non-signaling. Assumes IEEE.\r\n */\r\nstatic real32_T rtGetMinusInfF(void)\r\n{\r\n  IEEESingle minfF;\r\n  minfF.wordL.wordLuint = 0xFF800000U;\r\n  return minfF.wordL.wordLreal;\r\n}\r\n\r\nreal_T rt_modd_snf(real_T u0, real_T u1)\r\n{\r\n  real_T q;\r\n  real_T y;\r\n  boolean_T yEq;\r\n  y = u0;\r\n  if (u1 == 0.0) {\r\n    if (u0 == 0.0) {\r\n      y = u1;\r\n    }\r\n  } else if (rtIsNaN(u0) || rtIsNaN(u1) || rtIsInf(u0)) {\r\n    y = (rtNaN);\r\n  } else if (u0 == 0.0) {\r\n    y = 0.0 / u1;\r\n  } else if (rtIsInf(u1)) {\r\n    if ((u1 < 0.0) != (u0 < 0.0)) {\r\n      y = u1;\r\n    }\r\n  } else {\r\n    y = fmod(u0, u1);\r\n    yEq = (y == 0.0);\r\n    if ((!yEq) && (u1 > floor(u1))) {\r\n      q = fabs(u0 / u1);\r\n      yEq = !(fabs(q - floor(q + 0.5)) > DBL_EPSILON * q);\r\n    }\r\n\r\n    if (yEq) {\r\n      y = u1 * 0.0;\r\n    } else if ((u0 < 0.0) != (u1 < 0.0)) {\r\n      y += u1;\r\n    }\r\n  }\r\n\r\n  return y;\r\n}\r\n\r\n/* Model step function */\r\nvoid Subsystem_step(void)\r\n{\r\n  real_T rtb_Gain1;\r\n\r\n  /* If: '<S1>/If1' incorporates:\r\n   *  Constant: '<S3>/Constant2'\r\n   *  Inport: '<Root>/In1'\r\n   *  Saturate: '<S3>/Saturation2'\r\n   *  Sum: '<S3>/Add1'\r\n   */\r\n  if (rtU.In1 <= 2.0) {\r\n    /* Outputs for IfAction SubSystem: '<S1>/If Action Subsystem2' incorporates:\r\n     *  ActionPort: '<S2>/Action Port'\r\n     */\r\n    /* DataTypeConversion: '<S2>/Data Type Conversion12' incorporates:\r\n     *  Constant: '<S2>/Constant4'\r\n     *  Merge: '<S1>/L1'\r\n     */\r\n    rtDW.l[0] = 0.0;\r\n\r\n    /* DataTypeConversion: '<S2>/Data Type Conversion6' incorporates:\r\n     *  Constant: '<S2>/Constant6'\r\n     *  Merge: '<S1>/R1'\r\n     */\r\n    rtDW.r[0] = 0.0;\r\n\r\n    /* Gain: '<S2>/Gain14' */\r\n    rtb_Gain1 = 100.0 * rtU.In1;\r\n\r\n    /* DataTypeConversion: '<S2>/Data Type Conversion1' incorporates:\r\n     *  Gain: '<S2>/Gain14'\r\n     *  Gain: '<S2>/Gain5'\r\n     *  LookupNDDirect: '<S2>/Lookup_Table10'\r\n     *  Merge: '<S1>/R1'\r\n     *\r\n     * About '<S2>/Lookup_Table10':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     */\r\n    rtDW.r[5] = 26844.0 * (real_T)rtConstP.Lookup_Table10_table[(int32_T)\r\n      rtb_Gain1] * 3.7252902984619141E-9;\r\n\r\n    /* DataTypeConversion: '<S2>/Data Type Conversion10' incorporates:\r\n     *  Gain: '<S2>/Gain14'\r\n     *  Gain: '<S2>/Gain41'\r\n     *  LookupNDDirect: '<S2>/Lookup_Table10'\r\n     *  LookupNDDirect: '<S2>/Lookup_Table2'\r\n     *  Merge: '<S1>/L1'\r\n     *\r\n     * About '<S2>/Lookup_Table10':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     *\r\n     * About '<S2>/Lookup_Table2':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     */\r\n    rtDW.l[2] = 26844.0 * (real_T)rtConstP.Lookup_Table2_table[(int32_T)\r\n      rtb_Gain1] * 3.7252902984619141E-9;\r\n\r\n    /* DataTypeConversion: '<S2>/Data Type Conversion11' incorporates:\r\n     *  Gain: '<S2>/Gain14'\r\n     *  Gain: '<S2>/Gain40'\r\n     *  LookupNDDirect: '<S2>/Lookup_Table1'\r\n     *  LookupNDDirect: '<S2>/Lookup_Table10'\r\n     *  Merge: '<S1>/L1'\r\n     *\r\n     * About '<S2>/Lookup_Table1':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     *\r\n     * About '<S2>/Lookup_Table10':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     */\r\n    rtDW.l[1] = 26844.0 * (real_T)rtConstP.Lookup_Table1_table[(int32_T)\r\n      rtb_Gain1] * 3.7252902984619141E-9;\r\n\r\n    /* DataTypeConversion: '<S2>/Data Type Conversion2' incorporates:\r\n     *  Gain: '<S2>/Gain14'\r\n     *  Gain: '<S2>/Gain4'\r\n     *  LookupNDDirect: '<S2>/Lookup_Table10'\r\n     *  LookupNDDirect: '<S2>/Lookup_Table9'\r\n     *  Merge: '<S1>/R1'\r\n     *\r\n     * About '<S2>/Lookup_Table10':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     *\r\n     * About '<S2>/Lookup_Table9':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     */\r\n    rtDW.r[4] = 26844.0 * (real_T)rtConstP.Lookup_Table9_table[(int32_T)\r\n      rtb_Gain1] * 3.7252902984619141E-9;\r\n\r\n    /* DataTypeConversion: '<S2>/Data Type Conversion3' incorporates:\r\n     *  Gain: '<S2>/Gain14'\r\n     *  Gain: '<S2>/Gain3'\r\n     *  LookupNDDirect: '<S2>/Lookup_Table10'\r\n     *  LookupNDDirect: '<S2>/Lookup_Table8'\r\n     *  Merge: '<S1>/R1'\r\n     *\r\n     * About '<S2>/Lookup_Table10':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     *\r\n     * About '<S2>/Lookup_Table8':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     */\r\n    rtDW.r[3] = 26844.0 * (real_T)rtConstP.Lookup_Table8_table[(int32_T)\r\n      rtb_Gain1] * 3.7252902984619141E-9;\r\n\r\n    /* DataTypeConversion: '<S2>/Data Type Conversion4' incorporates:\r\n     *  Gain: '<S2>/Gain14'\r\n     *  Gain: '<S2>/Gain2'\r\n     *  LookupNDDirect: '<S2>/Lookup_Table10'\r\n     *  LookupNDDirect: '<S2>/Lookup_Table7'\r\n     *  Merge: '<S1>/R1'\r\n     *\r\n     * About '<S2>/Lookup_Table10':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     *\r\n     * About '<S2>/Lookup_Table7':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     */\r\n    rtDW.r[2] = 26844.0 * (real_T)rtConstP.Lookup_Table7_table[(int32_T)\r\n      rtb_Gain1] * 3.7252902984619141E-9;\r\n\r\n    /* DataTypeConversion: '<S2>/Data Type Conversion5' incorporates:\r\n     *  Gain: '<S2>/Gain1'\r\n     *  Gain: '<S2>/Gain14'\r\n     *  LookupNDDirect: '<S2>/Lookup_Table10'\r\n     *  LookupNDDirect: '<S2>/Lookup_Table6'\r\n     *  Merge: '<S1>/R1'\r\n     *\r\n     * About '<S2>/Lookup_Table10':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     *\r\n     * About '<S2>/Lookup_Table6':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     */\r\n    rtDW.r[1] = 26844.0 * (real_T)rtConstP.Lookup_Table6_table[(int32_T)\r\n      rtb_Gain1] * 3.7252902984619141E-9;\r\n\r\n    /* DataTypeConversion: '<S2>/Data Type Conversion7' incorporates:\r\n     *  Gain: '<S2>/Gain14'\r\n     *  Gain: '<S2>/Gain44'\r\n     *  LookupNDDirect: '<S2>/Lookup_Table10'\r\n     *  LookupNDDirect: '<S2>/Lookup_Table5'\r\n     *  Merge: '<S1>/L1'\r\n     *\r\n     * About '<S2>/Lookup_Table10':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     *\r\n     * About '<S2>/Lookup_Table5':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     */\r\n    rtDW.l[5] = 26844.0 * (real_T)rtConstP.Lookup_Table5_table[(int32_T)\r\n      rtb_Gain1] * 3.7252902984619141E-9;\r\n\r\n    /* DataTypeConversion: '<S2>/Data Type Conversion8' incorporates:\r\n     *  Gain: '<S2>/Gain14'\r\n     *  Gain: '<S2>/Gain43'\r\n     *  LookupNDDirect: '<S2>/Lookup_Table10'\r\n     *  LookupNDDirect: '<S2>/Lookup_Table4'\r\n     *  Merge: '<S1>/L1'\r\n     *\r\n     * About '<S2>/Lookup_Table10':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     *\r\n     * About '<S2>/Lookup_Table4':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     */\r\n    rtDW.l[4] = 26844.0 * (real_T)rtConstP.Lookup_Table4_table[(int32_T)\r\n      rtb_Gain1] * 3.7252902984619141E-9;\r\n\r\n    /* DataTypeConversion: '<S2>/Data Type Conversion9' incorporates:\r\n     *  Gain: '<S2>/Gain14'\r\n     *  Gain: '<S2>/Gain42'\r\n     *  LookupNDDirect: '<S2>/Lookup_Table10'\r\n     *  LookupNDDirect: '<S2>/Lookup_Table3'\r\n     *  Merge: '<S1>/L1'\r\n     *\r\n     * About '<S2>/Lookup_Table10':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     *\r\n     * About '<S2>/Lookup_Table3':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     */\r\n    rtDW.l[3] = 26844.0 * (real_T)rtConstP.Lookup_Table3_table[(int32_T)\r\n      rtb_Gain1] * 3.7252902984619141E-9;\r\n\r\n    /* End of Outputs for SubSystem: '<S1>/If Action Subsystem2' */\r\n  } else {\r\n    /* Outputs for IfAction SubSystem: '<S1>/If Action Subsystem3' incorporates:\r\n     *  ActionPort: '<S3>/Action Port'\r\n     */\r\n    if (rtU.In1 - 2.0 <= 0.0) {\r\n      /* Saturate: '<S3>/Saturation2' */\r\n      rtb_Gain1 = 0.0;\r\n    } else {\r\n      /* Saturate: '<S3>/Saturation2' incorporates:\r\n       *  Constant: '<S3>/Constant2'\r\n       *  Sum: '<S3>/Add1'\r\n       */\r\n      rtb_Gain1 = rtU.In1 - 2.0;\r\n    }\r\n\r\n    /* Gain: '<S3>/Gain' incorporates:\r\n     *  Constant: '<S3>/Constant4'\r\n     *  Math: '<S3>/Math Function'\r\n     *  Saturate: '<S3>/Saturation2'\r\n     */\r\n    rtb_Gain1 = 100.0 * rt_modd_snf(rtb_Gain1, 1.0);\r\n\r\n    /* DataTypeConversion: '<S3>/Data Type Conversion' incorporates:\r\n     *  Gain: '<S3>/Gain1'\r\n     *  Gain: '<S3>/Gain6'\r\n     *  LookupNDDirect: '<S3>/Lookup_Table_else10'\r\n     *  Merge: '<S1>/R1'\r\n     *\r\n     * About '<S3>/Lookup_Table_else10':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     */\r\n    rtDW.r[5] = 26844.0 * (real_T)rtConstP.Lookup_Table_else10_table[(int32_T)\r\n      rtb_Gain1] * 3.7252902984619141E-9;\r\n\r\n    /* DataTypeConversion: '<S3>/Data Type Conversion1' incorporates:\r\n     *  Gain: '<S3>/Gain1'\r\n     *  Gain: '<S3>/Gain5'\r\n     *  LookupNDDirect: '<S3>/Lookup_Table_else10'\r\n     *  LookupNDDirect: '<S3>/Lookup_Table_else9'\r\n     *  Merge: '<S1>/R1'\r\n     *\r\n     * About '<S3>/Lookup_Table_else10':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     *\r\n     * About '<S3>/Lookup_Table_else9':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     */\r\n    rtDW.r[4] = 26844.0 * (real_T)rtConstP.Lookup_Table_else9_table[(int32_T)\r\n      rtb_Gain1] * 3.7252902984619141E-9;\r\n\r\n    /* DataTypeConversion: '<S3>/Data Type Conversion10' incorporates:\r\n     *  Gain: '<S3>/Gain1'\r\n     *  Gain: '<S3>/Gain40'\r\n     *  LookupNDDirect: '<S3>/Lookup_Table_else1'\r\n     *  LookupNDDirect: '<S3>/Lookup_Table_else10'\r\n     *  Merge: '<S1>/L1'\r\n     *\r\n     * About '<S3>/Lookup_Table_else1':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     *\r\n     * About '<S3>/Lookup_Table_else10':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     */\r\n    rtDW.l[1] = 26844.0 * (real_T)rtConstP.Lookup_Table_else1_table[(int32_T)\r\n      rtb_Gain1] * 3.7252902984619141E-9;\r\n\r\n    /* DataTypeConversion: '<S3>/Data Type Conversion2' incorporates:\r\n     *  Gain: '<S3>/Gain1'\r\n     *  Gain: '<S3>/Gain4'\r\n     *  LookupNDDirect: '<S3>/Lookup_Table_else10'\r\n     *  LookupNDDirect: '<S3>/Lookup_Table_else8'\r\n     *  Merge: '<S1>/R1'\r\n     *\r\n     * About '<S3>/Lookup_Table_else10':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     *\r\n     * About '<S3>/Lookup_Table_else8':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     */\r\n    rtDW.r[3] = 26844.0 * (real_T)rtConstP.Lookup_Table_else8_table[(int32_T)\r\n      rtb_Gain1] * 3.7252902984619141E-9;\r\n\r\n    /* DataTypeConversion: '<S3>/Data Type Conversion3' incorporates:\r\n     *  Gain: '<S3>/Gain1'\r\n     *  Gain: '<S3>/Gain3'\r\n     *  LookupNDDirect: '<S3>/Lookup_Table_else10'\r\n     *  LookupNDDirect: '<S3>/Lookup_Table_else7'\r\n     *  Merge: '<S1>/R1'\r\n     *\r\n     * About '<S3>/Lookup_Table_else10':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     *\r\n     * About '<S3>/Lookup_Table_else7':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     */\r\n    rtDW.r[2] = 26844.0 * (real_T)rtConstP.Lookup_Table_else7_table[(int32_T)\r\n      rtb_Gain1] * 3.7252902984619141E-9;\r\n\r\n    /* DataTypeConversion: '<S3>/Data Type Conversion4' incorporates:\r\n     *  Gain: '<S3>/Gain1'\r\n     *  Gain: '<S3>/Gain2'\r\n     *  LookupNDDirect: '<S3>/Lookup_Table_else10'\r\n     *  LookupNDDirect: '<S3>/Lookup_Table_else6'\r\n     *  Merge: '<S1>/R1'\r\n     *\r\n     * About '<S3>/Lookup_Table_else10':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     *\r\n     * About '<S3>/Lookup_Table_else6':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     */\r\n    rtDW.r[1] = 26844.0 * (real_T)rtConstP.Lookup_Table_else6_table[(int32_T)\r\n      rtb_Gain1] * 3.7252902984619141E-9;\r\n\r\n    /* DataTypeConversion: '<S3>/Data Type Conversion6' incorporates:\r\n     *  Gain: '<S3>/Gain1'\r\n     *  Gain: '<S3>/Gain44'\r\n     *  LookupNDDirect: '<S3>/Lookup_Table_else10'\r\n     *  LookupNDDirect: '<S3>/Lookup_Table_else5'\r\n     *  Merge: '<S1>/L1'\r\n     *\r\n     * About '<S3>/Lookup_Table_else10':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     *\r\n     * About '<S3>/Lookup_Table_else5':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     */\r\n    rtDW.l[5] = 26844.0 * (real_T)rtConstP.Lookup_Table_else5_table[(int32_T)\r\n      rtb_Gain1] * 3.7252902984619141E-9;\r\n\r\n    /* DataTypeConversion: '<S3>/Data Type Conversion7' incorporates:\r\n     *  Gain: '<S3>/Gain1'\r\n     *  Gain: '<S3>/Gain43'\r\n     *  LookupNDDirect: '<S3>/Lookup_Table_else10'\r\n     *  LookupNDDirect: '<S3>/Lookup_Table_else4'\r\n     *  Merge: '<S1>/L1'\r\n     *\r\n     * About '<S3>/Lookup_Table_else10':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     *\r\n     * About '<S3>/Lookup_Table_else4':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     */\r\n    rtDW.l[4] = 26844.0 * (real_T)rtConstP.Lookup_Table_else4_table[(int32_T)\r\n      rtb_Gain1] * 3.7252902984619141E-9;\r\n\r\n    /* DataTypeConversion: '<S3>/Data Type Conversion8' incorporates:\r\n     *  Gain: '<S3>/Gain1'\r\n     *  Gain: '<S3>/Gain42'\r\n     *  LookupNDDirect: '<S3>/Lookup_Table_else10'\r\n     *  LookupNDDirect: '<S3>/Lookup_Table_else3'\r\n     *  Merge: '<S1>/L1'\r\n     *\r\n     * About '<S3>/Lookup_Table_else10':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     *\r\n     * About '<S3>/Lookup_Table_else3':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     */\r\n    rtDW.l[3] = 26844.0 * (real_T)rtConstP.Lookup_Table_else3_table[(int32_T)\r\n      rtb_Gain1] * 3.7252902984619141E-9;\r\n\r\n    /* DataTypeConversion: '<S3>/Data Type Conversion9' incorporates:\r\n     *  Gain: '<S3>/Gain1'\r\n     *  Gain: '<S3>/Gain41'\r\n     *  LookupNDDirect: '<S3>/Lookup_Table_else10'\r\n     *  LookupNDDirect: '<S3>/Lookup_Table_else2'\r\n     *  Merge: '<S1>/L1'\r\n     *\r\n     * About '<S3>/Lookup_Table_else10':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     *\r\n     * About '<S3>/Lookup_Table_else2':\r\n     *  1-dimensional Direct Look-Up returning a Scalar,\r\n     *\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     */\r\n    rtDW.l[2] = 26844.0 * (real_T)rtConstP.Lookup_Table_else2_table[(int32_T)\r\n      rtb_Gain1] * 3.7252902984619141E-9;\r\n\r\n    /* DataTypeConversion: '<S3>/Data Type Conversion11' incorporates:\r\n     *  Constant: '<S3>/Constant1'\r\n     *  Merge: '<S1>/L1'\r\n     */\r\n    rtDW.l[0] = 0.0;\r\n\r\n    /* DataTypeConversion: '<S3>/Data Type Conversion5' incorporates:\r\n     *  Constant: '<S3>/Constant3'\r\n     *  Gain: '<S3>/Gain1'\r\n     *  Merge: '<S1>/R1'\r\n     */\r\n    rtDW.r[0] = 0.0;\r\n\r\n    /* End of Outputs for SubSystem: '<S1>/If Action Subsystem3' */\r\n  }\r\n\r\n  /* End of If: '<S1>/If1' */\r\n\r\n  /* Outport: '<Root>/Out2' incorporates:\r\n   *  Gain: '<S1>/Gain54'\r\n   */\r\n  rtY.Out2 = -rtDW.r[1];\r\n\r\n  /* Outport: '<Root>/Out3' incorporates:\r\n   *  Gain: '<S1>/Gain55'\r\n   */\r\n  rtY.Out3 = -rtDW.r[2];\r\n\r\n  /* Outport: '<Root>/Out4' incorporates:\r\n   *  Gain: '<S1>/Gain56'\r\n   */\r\n  rtY.Out4 = -rtDW.r[3];\r\n\r\n  /* Outport: '<Root>/Out9' incorporates:\r\n   *  Gain: '<S1>/Gain45'\r\n   */\r\n  rtY.Out9 = -rtDW.l[2];\r\n\r\n  /* Outport: '<Root>/Out12' incorporates:\r\n   *  Gain: '<S1>/Gain52'\r\n   */\r\n  rtY.Out12 = -rtDW.l[5];\r\n\r\n  /* Outport: '<Root>/Out7' */\r\n  rtY.Out7 = 0.0;\r\n\r\n  /* Outport: '<Root>/Out8' */\r\n  rtY.Out8 = rtDW.l[1];\r\n\r\n  /* Outport: '<Root>/Out10' */\r\n  rtY.Out10 = rtDW.l[3];\r\n\r\n  /* Outport: '<Root>/Out11' */\r\n  rtY.Out11 = rtDW.l[4];\r\n\r\n  /* Outport: '<Root>/Out1' */\r\n  rtY.Out1 = 0.0;\r\n\r\n  /* Outport: '<Root>/Out5' */\r\n  rtY.Out5 = rtDW.r[4];\r\n\r\n  /* Outport: '<Root>/Out6' */\r\n  rtY.Out6 = rtDW.r[5];\r\n}\r\n\r\n/* Model initialize function */\r\nvoid Subsystem_initialize(void)\r\n{\r\n  /* Registration code */\r\n\r\n  /* initialize non-finites */\r\n  rt_InitInfAndNaN(sizeof(real_T));\r\n\r\n  /* SystemInitialize for Outport: '<Root>/Out7' */\r\n  rtY.Out7 = rtDW.l[0];\r\n\r\n  /* SystemInitialize for Outport: '<Root>/Out8' */\r\n  rtY.Out8 = rtDW.l[1];\r\n\r\n  /* SystemInitialize for Outport: '<Root>/Out10' */\r\n  rtY.Out10 = rtDW.l[3];\r\n\r\n  /* SystemInitialize for Outport: '<Root>/Out11' */\r\n  rtY.Out11 = rtDW.l[4];\r\n\r\n  /* SystemInitialize for Outport: '<Root>/Out1' */\r\n  rtY.Out1 = rtDW.r[0];\r\n\r\n  /* SystemInitialize for Outport: '<Root>/Out5' */\r\n  rtY.Out5 = rtDW.r[4];\r\n\r\n  /* SystemInitialize for Outport: '<Root>/Out6' */\r\n  rtY.Out6 = rtDW.r[5];\r\n}\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"Subsystem.h","type":"header","group":"model","path":"E:\\DR_Han\\小人形关节整合\\controller\\C_code_mat\\Subsystem_ert_rtw","tag":"","groupDisplay":"模型文件","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: Subsystem.h\r\n *\r\n * Code generated for Simulink model 'Subsystem'.\r\n *\r\n * Model version                  : 1.5\r\n * Simulink Coder version         : 9.9 (R2023a) 19-Nov-2022\r\n * C/C++ source code generated on : Sat Oct 12 14:57:28 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex-M\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. RAM efficiency\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTW_HEADER_Subsystem_h_\r\n#define RTW_HEADER_Subsystem_h_\r\n#ifndef Subsystem_COMMON_INCLUDES_\r\n#define Subsystem_COMMON_INCLUDES_\r\n#include \"rtwtypes.h\"\r\n#endif                                 /* Subsystem_COMMON_INCLUDES_ */\r\n\r\n/* Block signals and states (default storage) for system '<Root>' */\r\ntypedef struct {\r\n  real_T r[6];                         /* '<S1>/R1' */\r\n  real_T l[6];                         /* '<S1>/L1' */\r\n} DW;\r\n\r\n/* Constant parameters (default storage) */\r\ntypedef struct {\r\n  /* Computed Parameter: Lookup_Table10_table\r\n   * Referenced by: '<S2>/Lookup_Table10'\r\n   */\r\n  int16_T Lookup_Table10_table[201];\r\n\r\n  /* Computed Parameter: Lookup_Table2_table\r\n   * Referenced by: '<S2>/Lookup_Table2'\r\n   */\r\n  int16_T Lookup_Table2_table[201];\r\n\r\n  /* Computed Parameter: Lookup_Table1_table\r\n   * Referenced by: '<S2>/Lookup_Table1'\r\n   */\r\n  int16_T Lookup_Table1_table[201];\r\n\r\n  /* Computed Parameter: Lookup_Table9_table\r\n   * Referenced by: '<S2>/Lookup_Table9'\r\n   */\r\n  int16_T Lookup_Table9_table[201];\r\n\r\n  /* Computed Parameter: Lookup_Table8_table\r\n   * Referenced by: '<S2>/Lookup_Table8'\r\n   */\r\n  int16_T Lookup_Table8_table[201];\r\n\r\n  /* Computed Parameter: Lookup_Table7_table\r\n   * Referenced by: '<S2>/Lookup_Table7'\r\n   */\r\n  int16_T Lookup_Table7_table[201];\r\n\r\n  /* Computed Parameter: Lookup_Table6_table\r\n   * Referenced by: '<S2>/Lookup_Table6'\r\n   */\r\n  int16_T Lookup_Table6_table[201];\r\n\r\n  /* Computed Parameter: Lookup_Table5_table\r\n   * Referenced by: '<S2>/Lookup_Table5'\r\n   */\r\n  int16_T Lookup_Table5_table[201];\r\n\r\n  /* Computed Parameter: Lookup_Table4_table\r\n   * Referenced by: '<S2>/Lookup_Table4'\r\n   */\r\n  int16_T Lookup_Table4_table[201];\r\n\r\n  /* Computed Parameter: Lookup_Table3_table\r\n   * Referenced by: '<S2>/Lookup_Table3'\r\n   */\r\n  int16_T Lookup_Table3_table[201];\r\n\r\n  /* Computed Parameter: Lookup_Table_else10_table\r\n   * Referenced by: '<S3>/Lookup_Table_else10'\r\n   */\r\n  int16_T Lookup_Table_else10_table[100];\r\n\r\n  /* Computed Parameter: Lookup_Table_else9_table\r\n   * Referenced by: '<S3>/Lookup_Table_else9'\r\n   */\r\n  int16_T Lookup_Table_else9_table[100];\r\n\r\n  /* Computed Parameter: Lookup_Table_else1_table\r\n   * Referenced by: '<S3>/Lookup_Table_else1'\r\n   */\r\n  int16_T Lookup_Table_else1_table[100];\r\n\r\n  /* Computed Parameter: Lookup_Table_else8_table\r\n   * Referenced by: '<S3>/Lookup_Table_else8'\r\n   */\r\n  int16_T Lookup_Table_else8_table[100];\r\n\r\n  /* Computed Parameter: Lookup_Table_else7_table\r\n   * Referenced by: '<S3>/Lookup_Table_else7'\r\n   */\r\n  int16_T Lookup_Table_else7_table[100];\r\n\r\n  /* Computed Parameter: Lookup_Table_else6_table\r\n   * Referenced by: '<S3>/Lookup_Table_else6'\r\n   */\r\n  int16_T Lookup_Table_else6_table[100];\r\n\r\n  /* Computed Parameter: Lookup_Table_else5_table\r\n   * Referenced by: '<S3>/Lookup_Table_else5'\r\n   */\r\n  int16_T Lookup_Table_else5_table[100];\r\n\r\n  /* Computed Parameter: Lookup_Table_else4_table\r\n   * Referenced by: '<S3>/Lookup_Table_else4'\r\n   */\r\n  int16_T Lookup_Table_else4_table[100];\r\n\r\n  /* Computed Parameter: Lookup_Table_else3_table\r\n   * Referenced by: '<S3>/Lookup_Table_else3'\r\n   */\r\n  int16_T Lookup_Table_else3_table[100];\r\n\r\n  /* Computed Parameter: Lookup_Table_else2_table\r\n   * Referenced by: '<S3>/Lookup_Table_else2'\r\n   */\r\n  int16_T Lookup_Table_else2_table[100];\r\n} ConstP;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\ntypedef struct {\r\n  real_T In1;                          /* '<Root>/In1' */\r\n} ExtU;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\ntypedef struct {\r\n  real_T Out1;                         /* '<Root>/Out1' */\r\n  real_T Out2;                         /* '<Root>/Out2' */\r\n  real_T Out3;                         /* '<Root>/Out3' */\r\n  real_T Out4;                         /* '<Root>/Out4' */\r\n  real_T Out5;                         /* '<Root>/Out5' */\r\n  real_T Out6;                         /* '<Root>/Out6' */\r\n  real_T Out7;                         /* '<Root>/Out7' */\r\n  real_T Out8;                         /* '<Root>/Out8' */\r\n  real_T Out9;                         /* '<Root>/Out9' */\r\n  real_T Out10;                        /* '<Root>/Out10' */\r\n  real_T Out11;                        /* '<Root>/Out11' */\r\n  real_T Out12;                        /* '<Root>/Out12' */\r\n} ExtY;\r\n\r\n/* Block signals and states (default storage) */\r\nextern DW rtDW;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\nextern ExtU rtU;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\nextern ExtY rtY;\r\n\r\n/* Constant parameters (default storage) */\r\nextern const ConstP rtConstP;\r\n\r\n/* Model entry point functions */\r\nextern void Subsystem_initialize(void);\r\nextern void Subsystem_step(void);\r\n\r\n/*-\r\n * These blocks were eliminated from the model due to optimizations:\r\n *\r\n * Block '<S1>/Gain46' : Eliminated nontunable gain of 1\r\n * Block '<S1>/Gain47' : Eliminated nontunable gain of 1\r\n * Block '<S1>/Gain48' : Eliminated nontunable gain of 1\r\n * Block '<S1>/Gain49' : Eliminated nontunable gain of 1\r\n * Block '<S1>/Gain50' : Eliminated nontunable gain of 1\r\n * Block '<S1>/Gain51' : Eliminated nontunable gain of 1\r\n * Block '<S1>/Gain53' : Eliminated nontunable gain of 1\r\n * Block '<S1>/Rate Transition2' : Eliminated since input and output rates are identical\r\n */\r\n\r\n/*-\r\n * The generated code includes comments that allow you to trace directly\r\n * back to the appropriate location in the model.  The basic format\r\n * is <system>/block_name, where system is the system number (uniquely\r\n * assigned by Simulink) and block_name is the name of the block.\r\n *\r\n * Note that this particular code originates from a subsystem build,\r\n * and has its own system numbers different from the parent model.\r\n * Refer to the system hierarchy for this subsystem below, and use the\r\n * MATLAB hilite_system command to trace the generated code back\r\n * to the parent model.  For example,\r\n *\r\n * hilite_system('c_code_MR100/Subsystem')    - opens subsystem c_code_MR100/Subsystem\r\n * hilite_system('c_code_MR100/Subsystem/Kp') - opens and selects block Kp\r\n *\r\n * Here is the system hierarchy for this model\r\n *\r\n * '<Root>' : 'c_code_MR100'\r\n * '<S1>'   : 'c_code_MR100/Subsystem'\r\n * '<S2>'   : 'c_code_MR100/Subsystem/If Action Subsystem2'\r\n * '<S3>'   : 'c_code_MR100/Subsystem/If Action Subsystem3'\r\n */\r\n#endif                                 /* RTW_HEADER_Subsystem_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"Subsystem_data.c","type":"source","group":"data","path":"E:\\DR_Han\\小人形关节整合\\controller\\C_code_mat\\Subsystem_ert_rtw","tag":"","groupDisplay":"数据文件","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: Subsystem_data.c\r\n *\r\n * Code generated for Simulink model 'Subsystem'.\r\n *\r\n * Model version                  : 1.5\r\n * Simulink Coder version         : 9.9 (R2023a) 19-Nov-2022\r\n * C/C++ source code generated on : Sat Oct 12 14:57:28 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex-M\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. RAM efficiency\r\n * Validation result: Not run\r\n */\r\n\r\n#include \"Subsystem.h\"\r\n\r\n/* Constant parameters (default storage) */\r\nconst ConstP rtConstP = {\r\n  /* Computed Parameter: Lookup_Table10_table\r\n   * Referenced by: '<S2>/Lookup_Table10'\r\n   */\r\n  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 1, 1, 2, 4, 6, 9, 12, 17, 22, 29, 37, 46, 57, 69, 83, 99, 117, 137, 159,\r\n    183, 209, 238, 269, 303, 339, 378, 420, 463, 510, 559, 610, 664, 720, 779,\r\n    839, 902, 966, 1032, 1100, 1169, 1238, 1309, 1380, 1451, 1523, 1593, 1664,\r\n    1733, 1801, 1867, 1931, 1993, 2053, 2110, 2163, 2214, 2260, 2303, 2342, 2377,\r\n    2407, 2433, 2454, 2470, 2481, 2486, 2486, 2481, 2470, 2453, 2430, 2401, 2367,\r\n    2326, 2279, 2226, 2166, 2101, 2029, 1951, 1867, 1777, 1682, 1581, 1474, 1362,\r\n    1246, 1124, 999, 870, 738, 603, 466, 327, 187, 47 },\r\n\r\n  /* Computed Parameter: Lookup_Table2_table\r\n   * Referenced by: '<S2>/Lookup_Table2'\r\n   */\r\n  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 223,\r\n    277, 396, 536, 683, 832, 981, 1128, 1274, 1418, 1560, 1699, 1837, 1971, 2103,\r\n    2233, 2360, 2484, 2606, 2724, 2840, 2953, 3063, 3170, 3273, 3374, 3472, 3566,\r\n    3657, 3745, 3830, 3911, 3989, 4063, 4134, 4201, 4264, 4324, 4380, 4432, 4480,\r\n    4524, 4564, 4600, 4631, 4658, 4681, 4698, 4711, 4719, 4719, 4719, 4719, 4719,\r\n    4719, 4719, 4719, 4719, 4719, 4719, 4719, 4719, 4719, 4719, 4719, 4719, 4719,\r\n    4719, 4719, 4719, 4718, 4718, 4718, 4717, 4717, 4716, 4716, 4715, 4713, 4712,\r\n    4710, 4708, 4706, 4703, 4700, 4696, 4692, 4687, 4682, 4676, 4669, 4662, 4654,\r\n    4645, 4635, 4624, 4613, 4601, 4588, 4574, 4560, 4545, 4530, 4524, 4538, 4568,\r\n    4614, 4671, 4739, 4816, 4898, 4984, 5072, 5161, 5249, 5335, 5418, 5495, 5567,\r\n    5633, 5692, 5742, 5783, 5815, 5835, 5845, 5848, 5846, 5830, 5803, 5766, 5719,\r\n    5663, 5599, 5529, 5452, 5372, 5287, 5201, 5114, 5029, 4946, 4869, 4799, 4738,\r\n    4689, 4655, 4637, 4638, 4648, 4655 },\r\n\r\n  /* Computed Parameter: Lookup_Table1_table\r\n   * Referenced by: '<S2>/Lookup_Table1'\r\n   */\r\n  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, -1, -1, -2, -4, -6, -9, -12, -17, -22, -29, -37, -46, -57, -69, -83, -99,\r\n    -117, -137, -159, -183, -209, -238, -269, -303, -339, -378, -420, -463, -510,\r\n    -559, -610, -664, -720, -779, -839, -902, -966, -1032, -1100, -1169, -1238,\r\n    -1309, -1380, -1451, -1523, -1593, -1664, -1733, -1802, -1873, -1945, -2018,\r\n    -2091, -2165, -2238, -2311, -2382, -2452, -2519, -2584, -2644, -2700, -2751,\r\n    -2795, -2832, -2861, -2882, -2892, -2892, -2881, -2857, -2824, -2781, -2725,\r\n    -2658, -2580, -2493, -2397, -2294, -2183, -2067, -1946, -1821, -1693, -1562,\r\n    -1428, -1293, -1157, -1020, -882, -744, -605, -466, -327, -187, -47 },\r\n\r\n  /* Computed Parameter: Lookup_Table9_table\r\n   * Referenced by: '<S2>/Lookup_Table9'\r\n   */\r\n  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 330,\r\n    411, 587, 795, 1014, 1235, 1456, 1676, 1895, 2110, 2323, 2534, 2741, 2945,\r\n    3146, 3344, 3539, 3730, 3918, 4102, 4283, 4460, 4633, 4802, 4967, 5129, 5286,\r\n    5439, 5587, 5731, 5870, 6005, 6134, 6259, 6378, 6491, 6599, 6702, 6798, 6888,\r\n    6972, 7048, 7119, 7181, 7237, 7285, 7324, 7356, 7379, 7393, 7393, 7393, 7393,\r\n    7393, 7393, 7393, 7393, 7393, 7393, 7393, 7393, 7393, 7393, 7393, 7393, 7393,\r\n    7393, 7393, 7393, 7392, 7392, 7392, 7391, 7390, 7389, 7388, 7387, 7385, 7383,\r\n    7381, 7378, 7374, 7370, 7365, 7359, 7353, 7345, 7337, 7327, 7316, 7304, 7291,\r\n    7277, 7261, 7243, 7225, 7204, 7183, 7160, 7136, 7111, 7085, 7059, 7031, 7003,\r\n    6975, 6946, 6918, 6890, 6863, 6837, 6812, 6789, 6767, 6747, 6730, 6714, 6702,\r\n    6692, 6686, 6682, 6682, 6685, 6691, 6701, 6714, 6730, 6749, 6771, 6796, 6824,\r\n    6853, 6885, 6918, 6952, 6987, 7022, 7057, 7092, 7125, 7157, 7187, 7214, 7238,\r\n    7259, 7277, 7290, 7299, 7304, 7304, 7300 },\r\n\r\n  /* Computed Parameter: Lookup_Table8_table\r\n   * Referenced by: '<S2>/Lookup_Table8'\r\n   */\r\n  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 552,\r\n    688, 983, 1332, 1697, 2067, 2437, 2805, 3169, 3528, 3883, 4233, 4578, 4917,\r\n    5250, 5577, 5899, 6214, 6523, 6826, 7123, 7412, 7695, 7972, 8241, 8503, 8758,\r\n    9005, 9244, 9476, 9700, 9916, 10123, 10322, 10511, 10692, 10864, 11026,\r\n    11178, 11320, 11452, 11573, 11683, 11781, 11868, 11943, 12005, 12054, 12090,\r\n    12112, 12112, 12112, 12112, 12112, 12112, 12112, 12112, 12112, 12112, 12112,\r\n    12112, 12112, 12112, 12112, 12112, 12112, 12112, 12112, 12111, 12111, 12110,\r\n    12110, 12109, 12108, 12106, 12105, 12103, 12100, 12097, 12093, 12088, 12082,\r\n    12076, 12068, 12059, 12049, 12037, 12024, 12009, 11992, 11974, 11953, 11930,\r\n    11905, 11878, 11849, 11817, 11784, 11748, 11711, 11671, 11631, 11588, 11545,\r\n    11501, 11457, 11412, 11368, 11324, 11281, 11240, 11200, 11163, 11129, 11098,\r\n    11070, 11046, 11026, 11011, 11000, 10995, 10994, 10999, 11009, 11024, 11045,\r\n    11070, 11101, 11136, 11175, 11218, 11265, 11315, 11367, 11421, 11476, 11531,\r\n    11586, 11640, 11693, 11743, 11789, 11832, 11870, 11903, 11930, 11951, 11966,\r\n    11973, 11973, 11966 },\r\n\r\n  /* Computed Parameter: Lookup_Table7_table\r\n   * Referenced by: '<S2>/Lookup_Table7'\r\n   */\r\n  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 223,\r\n    277, 396, 536, 683, 832, 981, 1128, 1274, 1418, 1560, 1699, 1837, 1971, 2103,\r\n    2233, 2360, 2484, 2606, 2724, 2840, 2953, 3063, 3170, 3273, 3374, 3472, 3566,\r\n    3657, 3745, 3830, 3911, 3989, 4063, 4134, 4201, 4264, 4324, 4380, 4432, 4480,\r\n    4524, 4564, 4600, 4631, 4658, 4681, 4698, 4711, 4719, 4719, 4719, 4719, 4719,\r\n    4719, 4719, 4719, 4719, 4719, 4719, 4719, 4719, 4719, 4719, 4719, 4719, 4719,\r\n    4719, 4719, 4719, 4718, 4718, 4718, 4717, 4717, 4716, 4716, 4715, 4713, 4712,\r\n    4710, 4708, 4706, 4703, 4700, 4696, 4692, 4687, 4682, 4676, 4669, 4662, 4654,\r\n    4645, 4635, 4624, 4613, 4601, 4588, 4574, 4560, 4545, 4530, 4514, 4498, 4482,\r\n    4466, 4449, 4433, 4418, 4403, 4388, 4375, 4362, 4350, 4340, 4331, 4324, 4319,\r\n    4315, 4313, 4312, 4314, 4318, 4323, 4331, 4340, 4352, 4365, 4379, 4395, 4412,\r\n    4430, 4449, 4469, 4489, 4509, 4529, 4549, 4568, 4586, 4603, 4618, 4632, 4644,\r\n    4654, 4661, 4666, 4669, 4669, 4667 },\r\n\r\n  /* Computed Parameter: Lookup_Table6_table\r\n   * Referenced by: '<S2>/Lookup_Table6'\r\n   */\r\n  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, -1, -1, -2, -4, -6, -9, -12, -17, -22, -29, -37, -46, -57, -69, -83, -99,\r\n    -117, -137, -159, -183, -209, -238, -269, -303, -339, -378, -420, -463, -510,\r\n    -559, -610, -664, -720, -779, -839, -902, -966, -1032, -1100, -1169, -1238,\r\n    -1309, -1380, -1451, -1523, -1593, -1664, -1733, -1801, -1867, -1931, -1993,\r\n    -2053, -2110, -2163, -2214, -2260, -2303, -2342, -2377, -2407, -2433, -2454,\r\n    -2470, -2481, -2486, -2486, -2481, -2470, -2453, -2430, -2401, -2367, -2326,\r\n    -2279, -2226, -2166, -2101, -2029, -1951, -1867, -1777, -1682, -1581, -1474,\r\n    -1362, -1246, -1124, -999, -870, -738, -603, -466, -327, -187, -47 },\r\n\r\n  /* Computed Parameter: Lookup_Table5_table\r\n   * Referenced by: '<S2>/Lookup_Table5'\r\n   */\r\n  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 1, 1, 2, 4, 6, 9, 12, 17, 22, 29, 37, 46, 57, 69, 83, 99, 117, 137, 159,\r\n    183, 209, 238, 269, 303, 339, 378, 420, 463, 510, 559, 610, 664, 720, 779,\r\n    839, 902, 966, 1032, 1100, 1169, 1238, 1309, 1380, 1451, 1523, 1593, 1664,\r\n    1733, 1802, 1873, 1945, 2018, 2091, 2165, 2238, 2311, 2382, 2452, 2519, 2584,\r\n    2644, 2700, 2751, 2795, 2832, 2861, 2882, 2892, 2892, 2881, 2857, 2824, 2781,\r\n    2725, 2658, 2580, 2493, 2397, 2294, 2183, 2067, 1946, 1821, 1693, 1562, 1428,\r\n    1293, 1157, 1020, 882, 744, 605, 466, 327, 187, 47 },\r\n\r\n  /* Computed Parameter: Lookup_Table4_table\r\n   * Referenced by: '<S2>/Lookup_Table4'\r\n   */\r\n  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 330,\r\n    411, 587, 795, 1014, 1235, 1456, 1676, 1895, 2110, 2323, 2534, 2741, 2945,\r\n    3146, 3344, 3539, 3730, 3918, 4102, 4283, 4460, 4633, 4802, 4967, 5129, 5286,\r\n    5439, 5587, 5731, 5870, 6005, 6134, 6259, 6378, 6491, 6599, 6702, 6798, 6888,\r\n    6972, 7048, 7119, 7181, 7237, 7285, 7324, 7356, 7379, 7393, 7393, 7393, 7393,\r\n    7393, 7393, 7393, 7393, 7393, 7393, 7393, 7393, 7393, 7393, 7393, 7393, 7393,\r\n    7393, 7393, 7393, 7392, 7392, 7392, 7391, 7390, 7389, 7388, 7387, 7385, 7383,\r\n    7381, 7378, 7374, 7370, 7365, 7359, 7353, 7345, 7337, 7327, 7316, 7304, 7291,\r\n    7277, 7261, 7243, 7225, 7204, 7183, 7160, 7136, 7111, 7085, 7059, 7049, 7073,\r\n    7126, 7206, 7308, 7430, 7567, 7716, 7874, 8038, 8205, 8373, 8538, 8699, 8853,\r\n    8998, 9132, 9253, 9358, 9445, 9512, 9556, 9576, 9584, 9578, 9545, 9488, 9408,\r\n    9309, 9193, 9063, 8920, 8768, 8609, 8446, 8281, 8117, 7957, 7805, 7663, 7536,\r\n    7427, 7340, 7278, 7247, 7249, 7266, 7279 },\r\n\r\n  /* Computed Parameter: Lookup_Table3_table\r\n   * Referenced by: '<S2>/Lookup_Table3'\r\n   */\r\n  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 552,\r\n    688, 983, 1332, 1697, 2067, 2437, 2805, 3169, 3528, 3883, 4233, 4578, 4917,\r\n    5250, 5577, 5899, 6214, 6523, 6826, 7123, 7412, 7695, 7972, 8241, 8503, 8758,\r\n    9005, 9244, 9476, 9700, 9916, 10123, 10322, 10511, 10692, 10864, 11026,\r\n    11178, 11320, 11452, 11573, 11683, 11781, 11868, 11943, 12005, 12054, 12090,\r\n    12112, 12112, 12112, 12112, 12112, 12112, 12112, 12112, 12112, 12112, 12112,\r\n    12112, 12112, 12112, 12112, 12112, 12112, 12112, 12112, 12111, 12111, 12110,\r\n    12110, 12109, 12108, 12106, 12105, 12103, 12100, 12097, 12093, 12088, 12082,\r\n    12076, 12068, 12059, 12049, 12037, 12024, 12009, 11992, 11974, 11953, 11930,\r\n    11905, 11878, 11849, 11817, 11784, 11748, 11711, 11671, 11631, 11588, 11573,\r\n    11611, 11694, 11819, 11980, 12169, 12382, 12614, 12858, 13110, 13366, 13622,\r\n    13873, 14117, 14349, 14566, 14766, 14944, 15100, 15228, 15326, 15392, 15420,\r\n    15432, 15424, 15376, 15291, 15174, 15028, 14856, 14662, 14449, 14221, 13981,\r\n    13733, 13482, 13231, 12986, 12751, 12532, 12335, 12165, 12029, 11933, 11884,\r\n    11887, 11914, 11934 },\r\n\r\n  /* Computed Parameter: Lookup_Table_else10_table\r\n   * Referenced by: '<S3>/Lookup_Table_else10'\r\n   */\r\n  { -93, -232, -370, -507, -642, -777, -910, -1041, -1171, -1298, -1422, -1543,\r\n    -1661, -1773, -1881, -1982, -2076, -2163, -2241, -2310, -2368, -2414, -2449,\r\n    -2470, -2478, -2475, -2459, -2430, -2388, -2333, -2267, -2190, -2105, -2011,\r\n    -1910, -1803, -1690, -1573, -1452, -1328, -1201, -1072, -941, -809, -675,\r\n    -541, -406, -270, -133, 4, 142, 279, 414, 548, 679, 807, 931, 1051, 1166,\r\n    1277, 1381, 1480, 1573, 1659, 1738, 1810, 1875, 1933, 1983, 2026, 2061, 2089,\r\n    2108, 2120, 2124, 2120, 2108, 2088, 2061, 2026, 1983, 1933, 1875, 1809, 1737,\r\n    1658, 1572, 1479, 1380, 1275, 1165, 1049, 929, 805, 676, 545, 411, 275, 138,\r\n    0 },\r\n\r\n  /* Computed Parameter: Lookup_Table_else9_table\r\n   * Referenced by: '<S3>/Lookup_Table_else9'\r\n   */\r\n  { 7290, 7276, 7277, 7309, 7370, 7456, 7563, 7689, 7829, 7981, 8142, 8308, 8476,\r\n    8645, 8812, 8973, 9128, 9272, 9405, 9523, 9625, 9708, 9770, 9809, 9821, 9820,\r\n    9805, 9761, 9692, 9599, 9487, 9357, 9212, 9054, 8887, 8714, 8536, 8357, 8180,\r\n    8007, 7843, 7691, 7555, 7438, 7344, 7277, 7243, 7243, 7259, 7271, 7279, 7282,\r\n    7281, 7275, 7266, 7253, 7236, 7216, 7194, 7170, 7144, 7117, 7090, 7063, 7036,\r\n    7010, 6985, 6962, 6942, 6924, 6909, 6897, 6889, 6884, 6883, 6885, 6891, 6901,\r\n    6914, 6930, 6949, 6971, 6995, 7021, 7049, 7077, 7106, 7135, 7163, 7191, 7216,\r\n    7240, 7261, 7279, 7294, 7305, 7312, 7315, 7314, 7307 },\r\n\r\n  /* Computed Parameter: Lookup_Table_else1_table\r\n   * Referenced by: '<S3>/Lookup_Table_else1'\r\n   */\r\n  { 93, 232, 369, 505, 638, 767, 893, 1014, 1131, 1242, 1348, 1448, 1541, 1628,\r\n    1709, 1782, 1848, 1907, 1958, 2002, 2038, 2066, 2086, 2099, 2104, 2101, 2090,\r\n    2071, 2044, 2010, 1968, 1918, 1861, 1797, 1725, 1646, 1561, 1469, 1370, 1266,\r\n    1156, 1041, 922, 798, 670, 539, 406, 270, 133, -4, -142, -279, -414, -550,\r\n    -684, -817, -949, -1079, -1208, -1334, -1458, -1578, -1694, -1806, -1912,\r\n    -2013, -2107, -2192, -2270, -2337, -2395, -2440, -2474, -2495, -2502, -2497,\r\n    -2481, -2450, -2407, -2351, -2284, -2207, -2120, -2026, -1924, -1816, -1702,\r\n    -1584, -1462, -1337, -1210, -1080, -948, -816, -682, -547, -412, -275, -138,\r\n    0 },\r\n\r\n  /* Computed Parameter: Lookup_Table_else8_table\r\n   * Referenced by: '<S3>/Lookup_Table_else8'\r\n   */\r\n  { 11952, 11930, 11931, 11981, 12076, 12210, 12377, 12571, 12789, 13023, 13269,\r\n    13523, 13780, 14035, 14286, 14528, 14758, 14973, 15169, 15343, 15493, 15614,\r\n    15704, 15760, 15778, 15777, 15755, 15691, 15590, 15455, 15290, 15098, 14883,\r\n    14649, 14400, 14139, 13870, 13598, 13328, 13063, 12811, 12576, 12364, 12181,\r\n    12035, 11932, 11877, 11877, 11903, 11922, 11934, 11939, 11937, 11928, 11913,\r\n    11893, 11867, 11836, 11801, 11763, 11723, 11681, 11638, 11595, 11552, 11511,\r\n    11473, 11437, 11405, 11376, 11353, 11334, 11321, 11313, 11312, 11315, 11325,\r\n    11340, 11361, 11387, 11417, 11451, 11489, 11530, 11573, 11618, 11663, 11708,\r\n    11753, 11796, 11836, 11873, 11906, 11935, 11958, 11975, 11986, 11991, 11988,\r\n    11978 },\r\n\r\n  /* Computed Parameter: Lookup_Table_else7_table\r\n   * Referenced by: '<S3>/Lookup_Table_else7'\r\n   */\r\n  { 4661, 4653, 4654, 4672, 4706, 4754, 4814, 4883, 4960, 5042, 5128, 5215, 5303,\r\n    5390, 5474, 5555, 5631, 5701, 5764, 5820, 5868, 5906, 5934, 5952, 5957, 5957,\r\n    5950, 5930, 5898, 5855, 5803, 5741, 5672, 5595, 5512, 5425, 5334, 5241, 5148,\r\n    5056, 4967, 4884, 4809, 4744, 4691, 4654, 4634, 4634, 4644, 4651, 4655, 4657,\r\n    4656, 4653, 4648, 4640, 4631, 4620, 4607, 4593, 4579, 4563, 4548, 4532, 4517,\r\n    4502, 4488, 4475, 4463, 4453, 4444, 4437, 4432, 4430, 4429, 4430, 4434, 4439,\r\n    4447, 4456, 4467, 4480, 4494, 4509, 4524, 4540, 4557, 4573, 4590, 4605, 4620,\r\n    4633, 4645, 4655, 4664, 4670, 4674, 4675, 4674, 4671 },\r\n\r\n  /* Computed Parameter: Lookup_Table_else6_table\r\n   * Referenced by: '<S3>/Lookup_Table_else6'\r\n   */\r\n  { 93, 232, 370, 507, 642, 777, 910, 1041, 1171, 1298, 1422, 1543, 1661, 1773,\r\n    1881, 1982, 2076, 2163, 2241, 2310, 2368, 2414, 2449, 2470, 2478, 2475, 2459,\r\n    2430, 2388, 2333, 2267, 2190, 2105, 2011, 1910, 1803, 1690, 1573, 1452, 1328,\r\n    1201, 1072, 941, 809, 675, 541, 406, 270, 133, -4, -142, -279, -414, -548,\r\n    -679, -807, -931, -1051, -1166, -1277, -1381, -1480, -1573, -1659, -1738,\r\n    -1810, -1875, -1933, -1983, -2026, -2061, -2089, -2108, -2120, -2124, -2120,\r\n    -2108, -2088, -2061, -2026, -1983, -1933, -1875, -1809, -1737, -1658, -1572,\r\n    -1479, -1380, -1275, -1165, -1049, -929, -805, -676, -545, -411, -275, -138,\r\n    0 },\r\n\r\n  /* Computed Parameter: Lookup_Table_else5_table\r\n   * Referenced by: '<S3>/Lookup_Table_else5'\r\n   */\r\n  { -93, -232, -369, -505, -638, -767, -893, -1014, -1131, -1242, -1348, -1448,\r\n    -1541, -1628, -1709, -1782, -1848, -1907, -1958, -2002, -2038, -2066, -2086,\r\n    -2099, -2104, -2101, -2090, -2071, -2044, -2010, -1968, -1918, -1861, -1797,\r\n    -1725, -1646, -1561, -1469, -1370, -1266, -1156, -1041, -922, -798, -670,\r\n    -539, -406, -270, -133, 4, 142, 279, 414, 550, 684, 817, 949, 1079, 1208,\r\n    1334, 1458, 1578, 1694, 1806, 1912, 2013, 2107, 2192, 2270, 2337, 2395, 2440,\r\n    2474, 2495, 2502, 2497, 2481, 2450, 2407, 2351, 2284, 2207, 2120, 2026, 1924,\r\n    1816, 1702, 1584, 1462, 1337, 1210, 1080, 948, 816, 682, 547, 412, 275, 138,\r\n    0 },\r\n\r\n  /* Computed Parameter: Lookup_Table_else4_table\r\n   * Referenced by: '<S3>/Lookup_Table_else4'\r\n   */\r\n  { 7288, 7292, 7291, 7286, 7277, 7264, 7248, 7229, 7207, 7183, 7157, 7131, 7103,\r\n    7076, 7049, 7023, 6998, 6975, 6954, 6936, 6921, 6909, 6900, 6895, 6893, 6895,\r\n    6900, 6909, 6922, 6938, 6956, 6977, 7001, 7026, 7053, 7081, 7109, 7138, 7166,\r\n    7193, 7218, 7241, 7262, 7280, 7295, 7305, 7312, 7315, 7313, 7307, 7296, 7281,\r\n    7280, 7311, 7370, 7455, 7561, 7686, 7825, 7976, 8136, 8301, 8470, 8638, 8804,\r\n    8965, 9119, 9263, 9395, 9513, 9615, 9698, 9760, 9798, 9811, 9810, 9795, 9752,\r\n    9683, 9591, 9479, 9349, 9204, 9048, 8881, 8708, 8531, 8352, 8175, 8003, 7840,\r\n    7688, 7552, 7435, 7342, 7276, 7241, 7242, 7258, 7271 },\r\n\r\n  /* Computed Parameter: Lookup_Table_else3_table\r\n   * Referenced by: '<S3>/Lookup_Table_else3'\r\n   */\r\n  { 11948, 11954, 11953, 11945, 11931, 11911, 11885, 11855, 11821, 11783, 11743,\r\n    11701, 11659, 11616, 11573, 11532, 11493, 11457, 11424, 11396, 11372, 11353,\r\n    11339, 11330, 11328, 11331, 11339, 11354, 11373, 11398, 11427, 11461, 11498,\r\n    11538, 11580, 11624, 11668, 11713, 11757, 11799, 11838, 11875, 11908, 11936,\r\n    11958, 11975, 11986, 11990, 11987, 11978, 11961, 11937, 11935, 11984, 12077,\r\n    12209, 12374, 12567, 12783, 13016, 13261, 13514, 13769, 14024, 14274, 14516,\r\n    14745, 14959, 15155, 15329, 15478, 15599, 15690, 15745, 15763, 15762, 15741,\r\n    15677, 15577, 15442, 15278, 15087, 14873, 14639, 14390, 14130, 13862, 13591,\r\n    13321, 13057, 12805, 12571, 12359, 12178, 12032, 11929, 11875, 11875, 11902,\r\n    11921 },\r\n\r\n  /* Computed Parameter: Lookup_Table_else2_table\r\n   * Referenced by: '<S3>/Lookup_Table_else2'\r\n   */\r\n  { 4660, 4662, 4662, 4659, 4654, 4647, 4637, 4627, 4614, 4601, 4586, 4571, 4555,\r\n    4540, 4524, 4509, 4495, 4482, 4470, 4460, 4451, 4444, 4439, 4436, 4435, 4436,\r\n    4439, 4444, 4451, 4460, 4471, 4483, 4497, 4511, 4527, 4543, 4559, 4575, 4591,\r\n    4606, 4620, 4634, 4645, 4656, 4664, 4670, 4674, 4675, 4674, 4671, 4665, 4656,\r\n    4655, 4673, 4706, 4754, 4813, 4881, 4958, 5039, 5125, 5212, 5300, 5386, 5470,\r\n    5551, 5626, 5696, 5760, 5815, 5863, 5901, 5930, 5947, 5953, 5952, 5945, 5926,\r\n    5894, 5852, 5799, 5738, 5668, 5592, 5509, 5422, 5331, 5239, 5146, 5054, 4965,\r\n    4883, 4807, 4743, 4690, 4653, 4634, 4634, 4643, 4650 }\r\n};\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"rtwtypes.h","type":"header","group":"utility","path":"E:\\DR_Han\\小人形关节整合\\controller\\C_code_mat\\Subsystem_ert_rtw","tag":"","groupDisplay":"实用工具文件","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: rtwtypes.h\r\n *\r\n * Code generated for Simulink model 'Subsystem'.\r\n *\r\n * Model version                  : 1.5\r\n * Simulink Coder version         : 9.9 (R2023a) 19-Nov-2022\r\n * C/C++ source code generated on : Sat Oct 12 14:57:28 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex-M\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. RAM efficiency\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTWTYPES_H\r\n#define RTWTYPES_H\r\n\r\n/* Logical type definitions */\r\n#if (!defined(__cplusplus))\r\n#ifndef false\r\n#define false                          (0U)\r\n#endif\r\n\r\n#ifndef true\r\n#define true                           (1U)\r\n#endif\r\n#endif\r\n\r\n/*=======================================================================*\r\n * Target hardware information\r\n *   Device type: ARM Compatible->ARM Cortex-M\r\n *   Number of bits:     char:   8    short:   16    int:  32\r\n *                       long:  32    long long:  64\r\n *                       native word size:  32\r\n *   Byte ordering: LittleEndian\r\n *   Signed integer division rounds to: Zero\r\n *   Shift right on a signed integer as arithmetic shift: on\r\n *=======================================================================*/\r\n\r\n/*=======================================================================*\r\n * Fixed width word size data types:                                     *\r\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n *   real32_T, real64_T           - 32 and 64 bit floating point numbers *\r\n *=======================================================================*/\r\ntypedef signed char int8_T;\r\ntypedef unsigned char uint8_T;\r\ntypedef short int16_T;\r\ntypedef unsigned short uint16_T;\r\ntypedef int int32_T;\r\ntypedef unsigned int uint32_T;\r\ntypedef long long int64_T;\r\ntypedef unsigned long long uint64_T;\r\ntypedef float real32_T;\r\ntypedef double real64_T;\r\n\r\n/*===========================================================================*\r\n * Generic type definitions: boolean_T, char_T, byte_T, int_T, uint_T,       *\r\n *                           real_T, time_T, ulong_T, ulonglong_T.           *\r\n *===========================================================================*/\r\ntypedef double real_T;\r\ntypedef double time_T;\r\ntypedef unsigned char boolean_T;\r\ntypedef int int_T;\r\ntypedef unsigned int uint_T;\r\ntypedef unsigned long ulong_T;\r\ntypedef unsigned long long ulonglong_T;\r\ntypedef char char_T;\r\ntypedef unsigned char uchar_T;\r\ntypedef char_T byte_T;\r\n\r\n/*=======================================================================*\r\n * Min and Max:                                                          *\r\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n *=======================================================================*/\r\n#define MAX_int8_T                     ((int8_T)(127))\r\n#define MIN_int8_T                     ((int8_T)(-128))\r\n#define MAX_uint8_T                    ((uint8_T)(255U))\r\n#define MAX_int16_T                    ((int16_T)(32767))\r\n#define MIN_int16_T                    ((int16_T)(-32768))\r\n#define MAX_uint16_T                   ((uint16_T)(65535U))\r\n#define MAX_int32_T                    ((int32_T)(2147483647))\r\n#define MIN_int32_T                    ((int32_T)(-2147483647-1))\r\n#define MAX_uint32_T                   ((uint32_T)(0xFFFFFFFFU))\r\n#define MAX_int64_T                    ((int64_T)(9223372036854775807LL))\r\n#define MIN_int64_T                    ((int64_T)(-9223372036854775807LL-1LL))\r\n#define MAX_uint64_T                   ((uint64_T)(0xFFFFFFFFFFFFFFFFULL))\r\n\r\n/* Block D-Work pointer type */\r\ntypedef void * pointer_T;\r\n\r\n#endif                                 /* RTWTYPES_H */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"rtmodel.h","type":"header","group":"interface","path":"E:\\DR_Han\\小人形关节整合\\controller\\C_code_mat\\Subsystem_ert_rtw","tag":"","groupDisplay":"接口文件","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: rtmodel.h\r\n *\r\n * Code generated for Simulink model 'Subsystem'.\r\n *\r\n * Model version                  : 1.5\r\n * Simulink Coder version         : 9.9 (R2023a) 19-Nov-2022\r\n * C/C++ source code generated on : Sat Oct 12 14:57:28 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex-M\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. RAM efficiency\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTW_HEADER_rtmodel_h_\r\n#define RTW_HEADER_rtmodel_h_\r\n#include \"Subsystem.h\"\r\n\r\n/* Macros generated for backwards compatibility  */\r\n#ifndef rtmGetErrorStatus\r\n#define rtmGetErrorStatus(rtm)         ((void*) 0)\r\n#endif\r\n\r\n#ifndef rtmSetErrorStatus\r\n#define rtmSetErrorStatus(rtm, val)    ((void) 0)\r\n#endif\r\n\r\n#ifndef rtmGetStopRequested\r\n#define rtmGetStopRequested(rtm)       ((void*) 0)\r\n#endif\r\n#endif                                 /* RTW_HEADER_rtmodel_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"}],"trace":"{\"model\":\"Subsystem\",\"sources\":[\"Subsystem.c\",\"Subsystem.h\"],\"categoricalProps\":[\"ModelElemCategory\",\"StorageClass\"],\"categoricalValues\":[\"InternalData\",\"Default\",\"Constants\",\"Inports\",\"Outports\"],\"sidPrefixes\":[\"Subsystem\"],\"fileRecords\":{\"1\":{\"records\":[{\"tk\":[31,3,31,9],\"els\":[\"1:98\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[31,10,31,11],\"els\":[\"1:98\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[31,11,31,12],\"els\":[\"1:98\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[31,12,31,13],\"els\":[\"1:98\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[31,13,31,14],\"els\":[\"1:98\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[31,14,31,15],\"els\":[\"1:98\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[32,3,32,9],\"els\":[\"1:97\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[32,10,32,11],\"els\":[\"1:97\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[32,11,32,12],\"els\":[\"1:97\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[32,12,32,13],\"els\":[\"1:97\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[32,13,32,14],\"els\":[\"1:97\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[32,14,32,15],\"els\":[\"1:97\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[40,3,40,10],\"els\":[\"1:35\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[40,11,40,31],\"els\":[\"1:35\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[40,31,40,32],\"els\":[\"1:35\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[40,32,40,35],\"els\":[\"1:35\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[40,35,40,36],\"els\":[\"1:35\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[40,36,40,37],\"els\":[\"1:35\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[45,3,45,10],\"els\":[\"1:27\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[45,11,45,30],\"els\":[\"1:27\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[45,30,45,31],\"els\":[\"1:27\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[45,31,45,34],\"els\":[\"1:27\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[45,34,45,35],\"els\":[\"1:27\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[45,35,45,36],\"els\":[\"1:27\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[50,3,50,10],\"els\":[\"1:26\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[50,11,50,30],\"els\":[\"1:26\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[50,30,50,31],\"els\":[\"1:26\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[50,31,50,34],\"els\":[\"1:26\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[50,34,50,35],\"els\":[\"1:26\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[50,35,50,36],\"els\":[\"1:26\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[55,3,55,10],\"els\":[\"1:34\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[55,11,55,30],\"els\":[\"1:34\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[55,30,55,31],\"els\":[\"1:34\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[55,31,55,34],\"els\":[\"1:34\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[55,34,55,35],\"els\":[\"1:34\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[55,35,55,36],\"els\":[\"1:34\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[60,3,60,10],\"els\":[\"1:33\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[60,11,60,30],\"els\":[\"1:33\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[60,30,60,31],\"els\":[\"1:33\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[60,31,60,34],\"els\":[\"1:33\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[60,34,60,35],\"els\":[\"1:33\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[60,35,60,36],\"els\":[\"1:33\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[65,3,65,10],\"els\":[\"1:32\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[65,11,65,30],\"els\":[\"1:32\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[65,30,65,31],\"els\":[\"1:32\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[65,31,65,34],\"els\":[\"1:32\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[65,34,65,35],\"els\":[\"1:32\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[65,35,65,36],\"els\":[\"1:32\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[70,3,70,10],\"els\":[\"1:31\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[70,11,70,30],\"els\":[\"1:31\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[70,30,70,31],\"els\":[\"1:31\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[70,31,70,34],\"els\":[\"1:31\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[70,34,70,35],\"els\":[\"1:31\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[70,35,70,36],\"els\":[\"1:31\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[75,3,75,10],\"els\":[\"1:30\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[75,11,75,30],\"els\":[\"1:30\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[75,30,75,31],\"els\":[\"1:30\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[75,31,75,34],\"els\":[\"1:30\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[75,34,75,35],\"els\":[\"1:30\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[75,35,75,36],\"els\":[\"1:30\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[80,3,80,10],\"els\":[\"1:29\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[80,11,80,30],\"els\":[\"1:29\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[80,30,80,31],\"els\":[\"1:29\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[80,31,80,34],\"els\":[\"1:29\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[80,34,80,35],\"els\":[\"1:29\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[80,35,80,36],\"els\":[\"1:29\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[85,3,85,10],\"els\":[\"1:28\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[85,11,85,30],\"els\":[\"1:28\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[85,30,85,31],\"els\":[\"1:28\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[85,31,85,34],\"els\":[\"1:28\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[85,34,85,35],\"els\":[\"1:28\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[85,35,85,36],\"els\":[\"1:28\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[90,3,90,10],\"els\":[\"1:77\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[90,11,90,36],\"els\":[\"1:77\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[90,36,90,37],\"els\":[\"1:77\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[90,37,90,40],\"els\":[\"1:77\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[90,40,90,41],\"els\":[\"1:77\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[90,41,90,42],\"els\":[\"1:77\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[95,3,95,10],\"els\":[\"1:76\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[95,11,95,35],\"els\":[\"1:76\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[95,35,95,36],\"els\":[\"1:76\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[95,36,95,39],\"els\":[\"1:76\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[95,39,95,40],\"els\":[\"1:76\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[95,40,95,41],\"els\":[\"1:76\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[100,3,100,10],\"els\":[\"1:68\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[100,11,100,35],\"els\":[\"1:68\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[100,35,100,36],\"els\":[\"1:68\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[100,36,100,39],\"els\":[\"1:68\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[100,39,100,40],\"els\":[\"1:68\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[100,40,100,41],\"els\":[\"1:68\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[105,3,105,10],\"els\":[\"1:75\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[105,11,105,35],\"els\":[\"1:75\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[105,35,105,36],\"els\":[\"1:75\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[105,36,105,39],\"els\":[\"1:75\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[105,39,105,40],\"els\":[\"1:75\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[105,40,105,41],\"els\":[\"1:75\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[110,3,110,10],\"els\":[\"1:74\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[110,11,110,35],\"els\":[\"1:74\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[110,35,110,36],\"els\":[\"1:74\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[110,36,110,39],\"els\":[\"1:74\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[110,39,110,40],\"els\":[\"1:74\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[110,40,110,41],\"els\":[\"1:74\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[115,3,115,10],\"els\":[\"1:73\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[115,11,115,35],\"els\":[\"1:73\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[115,35,115,36],\"els\":[\"1:73\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[115,36,115,39],\"els\":[\"1:73\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[115,39,115,40],\"els\":[\"1:73\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[115,40,115,41],\"els\":[\"1:73\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[120,3,120,10],\"els\":[\"1:72\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[120,11,120,35],\"els\":[\"1:72\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[120,35,120,36],\"els\":[\"1:72\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[120,36,120,39],\"els\":[\"1:72\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[120,39,120,40],\"els\":[\"1:72\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[120,40,120,41],\"els\":[\"1:72\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[125,3,125,10],\"els\":[\"1:71\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[125,11,125,35],\"els\":[\"1:71\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[125,35,125,36],\"els\":[\"1:71\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[125,36,125,39],\"els\":[\"1:71\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[125,39,125,40],\"els\":[\"1:71\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[125,40,125,41],\"els\":[\"1:71\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[130,3,130,10],\"els\":[\"1:70\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[130,11,130,35],\"els\":[\"1:70\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[130,35,130,36],\"els\":[\"1:70\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[130,36,130,39],\"els\":[\"1:70\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[130,39,130,40],\"els\":[\"1:70\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[130,40,130,41],\"els\":[\"1:70\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[135,3,135,10],\"els\":[\"1:69\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[135,11,135,35],\"els\":[\"1:69\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[135,35,135,36],\"els\":[\"1:69\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[135,36,135,39],\"els\":[\"1:69\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[135,39,135,40],\"els\":[\"1:69\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[135,40,135,41],\"els\":[\"1:69\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[140,3,140,9],\"els\":[\"1:151\"],\"ct\":{\"1\":1,\"0\":3}},{\"tk\":[140,10,140,13],\"els\":[\"1:151\"],\"ct\":{\"0\":3,\"1\":1}},{\"tk\":[140,13,140,14],\"els\":[\"1:151\"],\"ct\":{\"1\":1,\"0\":3}},{\"tk\":[145,3,145,9],\"els\":[\"1:152\"],\"ct\":{\"0\":4,\"1\":1}},{\"tk\":[145,10,145,14],\"els\":[\"1:152\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[145,14,145,15],\"els\":[\"1:152\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[146,3,146,9],\"els\":[\"1:153\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[146,10,146,14],\"els\":[\"1:153\"],\"ct\":{\"0\":4,\"1\":1}},{\"tk\":[146,14,146,15],\"els\":[\"1:153\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[147,3,147,9],\"els\":[\"1:154\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[147,10,147,14],\"els\":[\"1:154\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[147,14,147,15],\"els\":[\"1:154\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[148,3,148,9],\"els\":[\"1:155\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[148,10,148,14],\"els\":[\"1:155\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[148,14,148,15],\"els\":[\"1:155\"],\"ct\":{\"0\":4,\"1\":1}},{\"tk\":[149,3,149,9],\"els\":[\"1:156\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[149,10,149,14],\"els\":[\"1:156\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[149,14,149,15],\"els\":[\"1:156\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[150,3,150,9],\"els\":[\"1:157\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[150,10,150,14],\"els\":[\"1:157\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[150,14,150,15],\"els\":[\"1:157\"],\"ct\":{\"0\":4,\"1\":1}},{\"tk\":[151,3,151,9],\"els\":[\"1:158\"],\"ct\":{\"0\":4,\"1\":1}},{\"tk\":[151,10,151,14],\"els\":[\"1:158\"],\"ct\":{\"0\":4,\"1\":1}},{\"tk\":[151,14,151,15],\"els\":[\"1:158\"],\"ct\":{\"0\":4,\"1\":1}},{\"tk\":[152,3,152,9],\"els\":[\"1:159\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[152,10,152,14],\"els\":[\"1:159\"],\"ct\":{\"0\":4,\"1\":1}},{\"tk\":[152,14,152,15],\"els\":[\"1:159\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[153,3,153,9],\"els\":[\"1:160\"],\"ct\":{\"0\":4,\"1\":1}},{\"tk\":[153,10,153,14],\"els\":[\"1:160\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[153,14,153,15],\"els\":[\"1:160\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[154,3,154,9],\"els\":[\"1:161\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[154,10,154,15],\"els\":[\"1:161\"],\"ct\":{\"0\":4,\"1\":1}},{\"tk\":[154,15,154,16],\"els\":[\"1:161\"],\"ct\":{\"0\":4,\"1\":1}},{\"tk\":[155,3,155,9],\"els\":[\"1:162\"],\"ct\":{\"0\":4,\"1\":1}},{\"tk\":[155,10,155,15],\"els\":[\"1:162\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[155,15,155,16],\"els\":[\"1:162\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[156,3,156,9],\"els\":[\"1:163\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[156,10,156,15],\"els\":[\"1:163\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[156,15,156,16],\"els\":[\"1:163\"],\"ct\":{\"1\":1,\"0\":4}}]},\"0\":{\"records\":[{\"tk\":[346,3,346,5],\"els\":[\"0:96\"]},{\"tk\":[346,7,346,10],\"els\":[\"0:151\"]},{\"tk\":[346,11,346,14],\"els\":[\"0:151\"]},{\"tk\":[346,15,346,17],\"els\":[\"0:96\"]},{\"tk\":[346,18,346,21],\"els\":[\"0:96\"]},{\"tk\":[354,5,354,9],\"els\":[\"0:97#out:1\"]},{\"tk\":[354,10,354,11],\"els\":[\"0:97#out:1\"]},{\"tk\":[354,11,354,12],\"els\":[\"0:97#out:1\",\"0:149\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[354,12,354,13],\"els\":[\"0:149\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[354,15,354,16],\"els\":[\"0:149\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[354,17,354,20],\"els\":[\"0:149\",\"0:16\",\"0:96\",\"0:18\",\"0:23\"]},{\"tk\":[360,5,360,9],\"els\":[\"0:98#out:1\"]},{\"tk\":[360,10,360,11],\"els\":[\"0:98#out:1\"]},{\"tk\":[360,11,360,12],\"els\":[\"0:98#out:1\",\"0:143\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[360,12,360,13],\"els\":[\"0:143\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[360,15,360,16],\"els\":[\"0:143\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[360,17,360,20],\"els\":[\"0:143\",\"0:16\",\"0:96\",\"0:18\",\"0:25\"]},{\"tk\":[363,5,363,14],\"els\":[\"0:79#out:1\"]},{\"tk\":[363,15,363,16],\"els\":[\"0:37\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[363,17,363,22],\"els\":[\"0:37\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[363,23,363,24],\"els\":[\"0:37\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[363,25,363,28],\"els\":[\"0:151\"]},{\"tk\":[363,29,363,32],\"els\":[\"0:151\"]},{\"tk\":[376,5,376,9],\"els\":[\"0:98#out:1\"]},{\"tk\":[376,10,376,11],\"els\":[\"0:98#out:1\"]},{\"tk\":[376,11,376,12],\"els\":[\"0:98#out:1\",\"0:138\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[376,12,376,13],\"els\":[\"0:138\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[376,15,376,16],\"els\":[\"0:138\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[376,17,376,24],\"els\":[\"0:46\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[376,25,376,26],\"els\":[\"0:46\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[376,27,376,28],\"els\":[\"0:46\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[376,35,376,43],\"els\":[\"0:35\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[376,44,376,64],\"els\":[\"0:35\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[376,64,376,65],\"els\":[\"0:35\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[376,65,376,66],\"els\":[\"0:35\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[377,7,377,16],\"els\":[\"0:79#out:1\"]},{\"tk\":[377,18,377,19],\"els\":[\"0:138\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[377,20,377,41],\"els\":[\"0:138\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[396,5,396,9],\"els\":[\"0:97#out:1\"]},{\"tk\":[396,10,396,11],\"els\":[\"0:97#out:1\"]},{\"tk\":[396,11,396,12],\"els\":[\"0:97#out:1\",\"0:147\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[396,12,396,13],\"els\":[\"0:147\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[396,15,396,16],\"els\":[\"0:147\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[396,17,396,24],\"els\":[\"0:42\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[396,25,396,26],\"els\":[\"0:42\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[396,27,396,28],\"els\":[\"0:42\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[396,35,396,43],\"els\":[\"0:27\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[396,44,396,63],\"els\":[\"0:27\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[396,63,396,64],\"els\":[\"0:27\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[396,64,396,65],\"els\":[\"0:35\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[397,7,397,16],\"els\":[\"0:79#out:1\"]},{\"tk\":[397,18,397,19],\"els\":[\"0:147\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[397,20,397,41],\"els\":[\"0:147\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[416,5,416,9],\"els\":[\"0:97#out:1\"]},{\"tk\":[416,10,416,11],\"els\":[\"0:97#out:1\"]},{\"tk\":[416,11,416,12],\"els\":[\"0:97#out:1\",\"0:148\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[416,12,416,13],\"els\":[\"0:148\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[416,15,416,16],\"els\":[\"0:148\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[416,17,416,24],\"els\":[\"0:41\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[416,25,416,26],\"els\":[\"0:41\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[416,27,416,28],\"els\":[\"0:41\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[416,35,416,43],\"els\":[\"0:26\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[416,44,416,63],\"els\":[\"0:26\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[416,63,416,64],\"els\":[\"0:26\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[416,64,416,65],\"els\":[\"0:35\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[417,7,417,16],\"els\":[\"0:79#out:1\"]},{\"tk\":[417,18,417,19],\"els\":[\"0:148\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[417,20,417,41],\"els\":[\"0:148\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[436,5,436,9],\"els\":[\"0:98#out:1\"]},{\"tk\":[436,10,436,11],\"els\":[\"0:98#out:1\"]},{\"tk\":[436,11,436,12],\"els\":[\"0:98#out:1\",\"0:139\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[436,12,436,13],\"els\":[\"0:139\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[436,15,436,16],\"els\":[\"0:139\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[436,17,436,24],\"els\":[\"0:40\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[436,25,436,26],\"els\":[\"0:40\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[436,27,436,28],\"els\":[\"0:40\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[436,35,436,43],\"els\":[\"0:34\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[436,44,436,63],\"els\":[\"0:34\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[436,63,436,64],\"els\":[\"0:34\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[436,64,436,65],\"els\":[\"0:35\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[437,7,437,16],\"els\":[\"0:79#out:1\"]},{\"tk\":[437,18,437,19],\"els\":[\"0:139\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[437,20,437,41],\"els\":[\"0:139\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[456,5,456,9],\"els\":[\"0:98#out:1\"]},{\"tk\":[456,10,456,11],\"els\":[\"0:98#out:1\"]},{\"tk\":[456,11,456,12],\"els\":[\"0:98#out:1\",\"0:140\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[456,12,456,13],\"els\":[\"0:140\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[456,15,456,16],\"els\":[\"0:140\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[456,17,456,24],\"els\":[\"0:39\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[456,25,456,26],\"els\":[\"0:39\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[456,27,456,28],\"els\":[\"0:39\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[456,35,456,43],\"els\":[\"0:33\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[456,44,456,63],\"els\":[\"0:33\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[456,63,456,64],\"els\":[\"0:33\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[456,64,456,65],\"els\":[\"0:35\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[457,7,457,16],\"els\":[\"0:79#out:1\"]},{\"tk\":[457,18,457,19],\"els\":[\"0:140\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[457,20,457,41],\"els\":[\"0:140\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[476,5,476,9],\"els\":[\"0:98#out:1\"]},{\"tk\":[476,10,476,11],\"els\":[\"0:98#out:1\"]},{\"tk\":[476,11,476,12],\"els\":[\"0:98#out:1\",\"0:141\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[476,12,476,13],\"els\":[\"0:141\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[476,15,476,16],\"els\":[\"0:141\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[476,17,476,24],\"els\":[\"0:38\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[476,25,476,26],\"els\":[\"0:38\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[476,27,476,28],\"els\":[\"0:38\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[476,35,476,43],\"els\":[\"0:32\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[476,44,476,63],\"els\":[\"0:32\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[476,63,476,64],\"els\":[\"0:32\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[476,64,476,65],\"els\":[\"0:35\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[477,7,477,16],\"els\":[\"0:79#out:1\"]},{\"tk\":[477,18,477,19],\"els\":[\"0:141\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[477,20,477,41],\"els\":[\"0:141\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[496,5,496,9],\"els\":[\"0:98#out:1\"]},{\"tk\":[496,10,496,11],\"els\":[\"0:98#out:1\"]},{\"tk\":[496,11,496,12],\"els\":[\"0:98#out:1\",\"0:142\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[496,12,496,13],\"els\":[\"0:142\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[496,15,496,16],\"els\":[\"0:142\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[496,17,496,24],\"els\":[\"0:36\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[496,25,496,26],\"els\":[\"0:36\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[496,27,496,28],\"els\":[\"0:36\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[496,35,496,43],\"els\":[\"0:31\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[496,44,496,63],\"els\":[\"0:31\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[496,63,496,64],\"els\":[\"0:31\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[496,64,496,65],\"els\":[\"0:35\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[497,7,497,16],\"els\":[\"0:79#out:1\"]},{\"tk\":[497,18,497,19],\"els\":[\"0:142\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[497,20,497,41],\"els\":[\"0:142\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[516,5,516,9],\"els\":[\"0:97#out:1\"]},{\"tk\":[516,10,516,11],\"els\":[\"0:97#out:1\"]},{\"tk\":[516,11,516,12],\"els\":[\"0:97#out:1\",\"0:144\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[516,12,516,13],\"els\":[\"0:144\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[516,15,516,16],\"els\":[\"0:144\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[516,17,516,24],\"els\":[\"0:45\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[516,25,516,26],\"els\":[\"0:45\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[516,27,516,28],\"els\":[\"0:45\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[516,35,516,43],\"els\":[\"0:30\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[516,44,516,63],\"els\":[\"0:30\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[516,63,516,64],\"els\":[\"0:30\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[516,64,516,65],\"els\":[\"0:35\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[517,7,517,16],\"els\":[\"0:79#out:1\"]},{\"tk\":[517,18,517,19],\"els\":[\"0:144\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[517,20,517,41],\"els\":[\"0:144\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[536,5,536,9],\"els\":[\"0:97#out:1\"]},{\"tk\":[536,10,536,11],\"els\":[\"0:97#out:1\"]},{\"tk\":[536,11,536,12],\"els\":[\"0:97#out:1\",\"0:145\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[536,12,536,13],\"els\":[\"0:145\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[536,15,536,16],\"els\":[\"0:145\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[536,17,536,24],\"els\":[\"0:44\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[536,25,536,26],\"els\":[\"0:44\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[536,27,536,28],\"els\":[\"0:44\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[536,35,536,43],\"els\":[\"0:29\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[536,44,536,63],\"els\":[\"0:29\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[536,63,536,64],\"els\":[\"0:29\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[536,64,536,65],\"els\":[\"0:35\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[537,7,537,16],\"els\":[\"0:79#out:1\"]},{\"tk\":[537,18,537,19],\"els\":[\"0:145\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[537,20,537,41],\"els\":[\"0:145\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[556,5,556,9],\"els\":[\"0:97#out:1\"]},{\"tk\":[556,10,556,11],\"els\":[\"0:97#out:1\"]},{\"tk\":[556,11,556,12],\"els\":[\"0:97#out:1\",\"0:146\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[556,12,556,13],\"els\":[\"0:146\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[556,15,556,16],\"els\":[\"0:146\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[556,17,556,24],\"els\":[\"0:43\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[556,25,556,26],\"els\":[\"0:43\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[556,27,556,28],\"els\":[\"0:43\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[556,35,556,43],\"els\":[\"0:28\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[556,44,556,63],\"els\":[\"0:28\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[556,63,556,64],\"els\":[\"0:28\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[556,64,556,65],\"els\":[\"0:35\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[557,7,557,16],\"els\":[\"0:79#out:1\"]},{\"tk\":[557,18,557,19],\"els\":[\"0:146\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[557,20,557,41],\"els\":[\"0:146\",\"0:16\",\"0:96\",\"0:18\"]},{\"tk\":[564,5,564,7],\"els\":[\"0:93\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[564,9,564,12],\"els\":[\"0:151\"]},{\"tk\":[564,13,564,16],\"els\":[\"0:151\"]},{\"tk\":[564,17,564,18],\"els\":[\"0:63\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[564,19,564,22],\"els\":[\"0:63\",\"0:60\",\"0:96\",\"0:62\",\"0:65\"]},{\"tk\":[564,23,564,25],\"els\":[\"0:93\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[564,26,564,29],\"els\":[\"0:93\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[566,7,566,16],\"els\":[\"0:79#out:1\"]},{\"tk\":[566,17,566,18],\"els\":[\"0:93\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[566,19,566,22],\"els\":[\"0:93\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[572,7,572,16],\"els\":[\"0:79#out:1\"]},{\"tk\":[572,17,572,18],\"els\":[\"0:93\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[572,19,572,22],\"els\":[\"0:151\"]},{\"tk\":[572,23,572,26],\"els\":[\"0:151\"]},{\"tk\":[572,27,572,28],\"els\":[\"0:63\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[572,29,572,32],\"els\":[\"0:63\",\"0:60\",\"0:96\",\"0:62\",\"0:65\"]},{\"tk\":[580,5,580,14],\"els\":[\"0:79#out:1\"]},{\"tk\":[580,15,580,16],\"els\":[\"0:78\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[580,17,580,22],\"els\":[\"0:78\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[580,23,580,24],\"els\":[\"0:78\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[580,25,580,36],\"els\":[\"0:90\",\"0:60\",\"0:96\",\"0:62\",\"0:93\",\"0:67\"]},{\"tk\":[580,36,580,37],\"els\":[\"0:90\",\"0:60\",\"0:96\",\"0:62\",\"0:93\",\"0:67\"]},{\"tk\":[580,37,580,46],\"els\":[\"0:90\",\"0:60\",\"0:96\",\"0:62\",\"0:93\",\"0:67\",\"0:79#out:1\"]},{\"tk\":[580,46,580,47],\"els\":[\"0:90\",\"0:60\",\"0:96\",\"0:62\",\"0:93\",\"0:67\"]},{\"tk\":[580,48,580,51],\"els\":[\"0:90\",\"0:60\",\"0:96\",\"0:62\",\"0:93\",\"0:67\"]},{\"tk\":[580,51,580,52],\"els\":[\"0:90\",\"0:60\",\"0:96\",\"0:62\",\"0:93\",\"0:67\"]},{\"tk\":[593,5,593,9],\"els\":[\"0:98#out:1\"]},{\"tk\":[593,10,593,11],\"els\":[\"0:98#out:1\"]},{\"tk\":[593,11,593,12],\"els\":[\"0:98#out:1\",\"0:126\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[593,12,593,13],\"els\":[\"0:126\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[593,15,593,16],\"els\":[\"0:126\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[593,17,593,24],\"els\":[\"0:89\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[593,25,593,26],\"els\":[\"0:89\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[593,27,593,28],\"els\":[\"0:89\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[593,35,593,43],\"els\":[\"0:77\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[593,44,593,69],\"els\":[\"0:77\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[593,69,593,70],\"els\":[\"0:77\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[593,70,593,71],\"els\":[\"0:77\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[594,7,594,16],\"els\":[\"0:79#out:1\"]},{\"tk\":[594,18,594,19],\"els\":[\"0:126\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[594,20,594,41],\"els\":[\"0:126\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[613,5,613,9],\"els\":[\"0:98#out:1\"]},{\"tk\":[613,10,613,11],\"els\":[\"0:98#out:1\"]},{\"tk\":[613,11,613,12],\"els\":[\"0:98#out:1\",\"0:127\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[613,12,613,13],\"els\":[\"0:127\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[613,15,613,16],\"els\":[\"0:127\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[613,17,613,24],\"els\":[\"0:88\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[613,25,613,26],\"els\":[\"0:88\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[613,27,613,28],\"els\":[\"0:88\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[613,35,613,43],\"els\":[\"0:76\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[613,44,613,68],\"els\":[\"0:76\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[613,68,613,69],\"els\":[\"0:76\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[613,69,613,70],\"els\":[\"0:77\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[614,7,614,16],\"els\":[\"0:79#out:1\"]},{\"tk\":[614,18,614,19],\"els\":[\"0:127\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[614,20,614,41],\"els\":[\"0:127\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[633,5,633,9],\"els\":[\"0:97#out:1\"]},{\"tk\":[633,10,633,11],\"els\":[\"0:97#out:1\"]},{\"tk\":[633,11,633,12],\"els\":[\"0:97#out:1\",\"0:136\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[633,12,633,13],\"els\":[\"0:136\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[633,15,633,16],\"els\":[\"0:136\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[633,17,633,24],\"els\":[\"0:83\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[633,25,633,26],\"els\":[\"0:83\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[633,27,633,28],\"els\":[\"0:83\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[633,35,633,43],\"els\":[\"0:68\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[633,44,633,68],\"els\":[\"0:68\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[633,68,633,69],\"els\":[\"0:68\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[633,69,633,70],\"els\":[\"0:77\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[634,7,634,16],\"els\":[\"0:79#out:1\"]},{\"tk\":[634,18,634,19],\"els\":[\"0:136\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[634,20,634,41],\"els\":[\"0:136\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[653,5,653,9],\"els\":[\"0:98#out:1\"]},{\"tk\":[653,10,653,11],\"els\":[\"0:98#out:1\"]},{\"tk\":[653,11,653,12],\"els\":[\"0:98#out:1\",\"0:128\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[653,12,653,13],\"els\":[\"0:128\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[653,15,653,16],\"els\":[\"0:128\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[653,17,653,24],\"els\":[\"0:82\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[653,25,653,26],\"els\":[\"0:82\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[653,27,653,28],\"els\":[\"0:82\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[653,35,653,43],\"els\":[\"0:75\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[653,44,653,68],\"els\":[\"0:75\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[653,68,653,69],\"els\":[\"0:75\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[653,69,653,70],\"els\":[\"0:77\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[654,7,654,16],\"els\":[\"0:79#out:1\"]},{\"tk\":[654,18,654,19],\"els\":[\"0:128\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[654,20,654,41],\"els\":[\"0:128\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[673,5,673,9],\"els\":[\"0:98#out:1\"]},{\"tk\":[673,10,673,11],\"els\":[\"0:98#out:1\"]},{\"tk\":[673,11,673,12],\"els\":[\"0:98#out:1\",\"0:129\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[673,12,673,13],\"els\":[\"0:129\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[673,15,673,16],\"els\":[\"0:129\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[673,17,673,24],\"els\":[\"0:81\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[673,25,673,26],\"els\":[\"0:81\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[673,27,673,28],\"els\":[\"0:81\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[673,35,673,43],\"els\":[\"0:74\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[673,44,673,68],\"els\":[\"0:74\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[673,68,673,69],\"els\":[\"0:74\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[673,69,673,70],\"els\":[\"0:77\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[674,7,674,16],\"els\":[\"0:79#out:1\"]},{\"tk\":[674,18,674,19],\"els\":[\"0:129\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[674,20,674,41],\"els\":[\"0:129\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[693,5,693,9],\"els\":[\"0:98#out:1\"]},{\"tk\":[693,10,693,11],\"els\":[\"0:98#out:1\"]},{\"tk\":[693,11,693,12],\"els\":[\"0:98#out:1\",\"0:130\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[693,12,693,13],\"els\":[\"0:130\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[693,15,693,16],\"els\":[\"0:130\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[693,17,693,24],\"els\":[\"0:80\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[693,25,693,26],\"els\":[\"0:80\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[693,27,693,28],\"els\":[\"0:80\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[693,35,693,43],\"els\":[\"0:73\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[693,44,693,68],\"els\":[\"0:73\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[693,68,693,69],\"els\":[\"0:73\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[693,69,693,70],\"els\":[\"0:77\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[694,7,694,16],\"els\":[\"0:79#out:1\"]},{\"tk\":[694,18,694,19],\"els\":[\"0:130\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[694,20,694,41],\"els\":[\"0:130\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[713,5,713,9],\"els\":[\"0:97#out:1\"]},{\"tk\":[713,10,713,11],\"els\":[\"0:97#out:1\"]},{\"tk\":[713,11,713,12],\"els\":[\"0:97#out:1\",\"0:132\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[713,12,713,13],\"els\":[\"0:132\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[713,15,713,16],\"els\":[\"0:132\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[713,17,713,24],\"els\":[\"0:87\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[713,25,713,26],\"els\":[\"0:87\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[713,27,713,28],\"els\":[\"0:87\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[713,35,713,43],\"els\":[\"0:72\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[713,44,713,68],\"els\":[\"0:72\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[713,68,713,69],\"els\":[\"0:72\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[713,69,713,70],\"els\":[\"0:77\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[714,7,714,16],\"els\":[\"0:79#out:1\"]},{\"tk\":[714,18,714,19],\"els\":[\"0:132\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[714,20,714,41],\"els\":[\"0:132\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[733,5,733,9],\"els\":[\"0:97#out:1\"]},{\"tk\":[733,10,733,11],\"els\":[\"0:97#out:1\"]},{\"tk\":[733,11,733,12],\"els\":[\"0:97#out:1\",\"0:133\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[733,12,733,13],\"els\":[\"0:133\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[733,15,733,16],\"els\":[\"0:133\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[733,17,733,24],\"els\":[\"0:86\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[733,25,733,26],\"els\":[\"0:86\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[733,27,733,28],\"els\":[\"0:86\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[733,35,733,43],\"els\":[\"0:71\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[733,44,733,68],\"els\":[\"0:71\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[733,68,733,69],\"els\":[\"0:71\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[733,69,733,70],\"els\":[\"0:77\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[734,7,734,16],\"els\":[\"0:79#out:1\"]},{\"tk\":[734,18,734,19],\"els\":[\"0:133\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[734,20,734,41],\"els\":[\"0:133\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[753,5,753,9],\"els\":[\"0:97#out:1\"]},{\"tk\":[753,10,753,11],\"els\":[\"0:97#out:1\"]},{\"tk\":[753,11,753,12],\"els\":[\"0:97#out:1\",\"0:134\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[753,12,753,13],\"els\":[\"0:134\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[753,15,753,16],\"els\":[\"0:134\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[753,17,753,24],\"els\":[\"0:85\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[753,25,753,26],\"els\":[\"0:85\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[753,27,753,28],\"els\":[\"0:85\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[753,35,753,43],\"els\":[\"0:70\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[753,44,753,68],\"els\":[\"0:70\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[753,68,753,69],\"els\":[\"0:70\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[753,69,753,70],\"els\":[\"0:77\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[754,7,754,16],\"els\":[\"0:79#out:1\"]},{\"tk\":[754,18,754,19],\"els\":[\"0:134\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[754,20,754,41],\"els\":[\"0:134\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[773,5,773,9],\"els\":[\"0:97#out:1\"]},{\"tk\":[773,10,773,11],\"els\":[\"0:97#out:1\"]},{\"tk\":[773,11,773,12],\"els\":[\"0:97#out:1\",\"0:135\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[773,12,773,13],\"els\":[\"0:135\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[773,15,773,16],\"els\":[\"0:135\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[773,17,773,24],\"els\":[\"0:84\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[773,25,773,26],\"els\":[\"0:84\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[773,27,773,28],\"els\":[\"0:84\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[773,35,773,43],\"els\":[\"0:69\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[773,44,773,68],\"els\":[\"0:69\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[773,68,773,69],\"els\":[\"0:69\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[773,69,773,70],\"els\":[\"0:77\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[774,7,774,16],\"els\":[\"0:79#out:1\"]},{\"tk\":[774,18,774,19],\"els\":[\"0:135\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[774,20,774,41],\"els\":[\"0:135\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[780,5,780,9],\"els\":[\"0:97#out:1\"]},{\"tk\":[780,10,780,11],\"els\":[\"0:97#out:1\"]},{\"tk\":[780,11,780,12],\"els\":[\"0:97#out:1\",\"0:137\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[780,12,780,13],\"els\":[\"0:137\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[780,15,780,16],\"els\":[\"0:137\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[780,17,780,20],\"els\":[\"0:137\",\"0:60\",\"0:96\",\"0:62\",\"0:64\"]},{\"tk\":[787,5,787,9],\"els\":[\"0:98#out:1\"]},{\"tk\":[787,10,787,11],\"els\":[\"0:98#out:1\"]},{\"tk\":[787,11,787,12],\"els\":[\"0:98#out:1\",\"0:131\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[787,12,787,13],\"els\":[\"0:131\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[787,15,787,16],\"els\":[\"0:131\",\"0:60\",\"0:96\",\"0:62\"]},{\"tk\":[787,17,787,20],\"els\":[\"0:79\",\"0:60\",\"0:96\",\"0:62\",\"0:66\"]},{\"tk\":[797,3,797,6],\"els\":[\"0:153\"]},{\"tk\":[797,7,797,11],\"els\":[\"0:153\"]},{\"tk\":[797,12,797,13],\"els\":[\"0:153\"]},{\"tk\":[797,14,797,15],\"els\":[\"0:13\"]},{\"tk\":[797,15,797,19],\"els\":[\"0:13\"]},{\"tk\":[797,20,797,21],\"els\":[\"0:13\"]},{\"tk\":[797,21,797,22],\"els\":[\"0:13\"]},{\"tk\":[797,22,797,23],\"els\":[\"0:13\"]},{\"tk\":[802,3,802,6],\"els\":[\"0:154\"]},{\"tk\":[802,7,802,11],\"els\":[\"0:154\"]},{\"tk\":[802,12,802,13],\"els\":[\"0:154\"]},{\"tk\":[802,14,802,15],\"els\":[\"0:14\"]},{\"tk\":[802,15,802,19],\"els\":[\"0:14\"]},{\"tk\":[802,20,802,21],\"els\":[\"0:14\"]},{\"tk\":[802,21,802,22],\"els\":[\"0:14\"]},{\"tk\":[802,22,802,23],\"els\":[\"0:14\"]},{\"tk\":[807,3,807,6],\"els\":[\"0:155\"]},{\"tk\":[807,7,807,11],\"els\":[\"0:155\"]},{\"tk\":[807,12,807,13],\"els\":[\"0:155\"]},{\"tk\":[807,14,807,15],\"els\":[\"0:15\"]},{\"tk\":[807,15,807,19],\"els\":[\"0:15\"]},{\"tk\":[807,20,807,21],\"els\":[\"0:15\"]},{\"tk\":[807,21,807,22],\"els\":[\"0:15\"]},{\"tk\":[807,22,807,23],\"els\":[\"0:15\"]},{\"tk\":[812,3,812,6],\"els\":[\"0:160\"]},{\"tk\":[812,7,812,11],\"els\":[\"0:160\"]},{\"tk\":[812,12,812,13],\"els\":[\"0:160\"]},{\"tk\":[812,14,812,15],\"els\":[\"0:4\"]},{\"tk\":[812,15,812,19],\"els\":[\"0:4\"]},{\"tk\":[812,20,812,21],\"els\":[\"0:4\"]},{\"tk\":[812,21,812,22],\"els\":[\"0:4\"]},{\"tk\":[812,22,812,23],\"els\":[\"0:4\"]},{\"tk\":[817,3,817,6],\"els\":[\"0:163\"]},{\"tk\":[817,7,817,12],\"els\":[\"0:163\"]},{\"tk\":[817,13,817,14],\"els\":[\"0:163\"]},{\"tk\":[817,15,817,16],\"els\":[\"0:11\"]},{\"tk\":[817,16,817,20],\"els\":[\"0:11\"]},{\"tk\":[817,21,817,22],\"els\":[\"0:11\"]},{\"tk\":[817,22,817,23],\"els\":[\"0:11\"]},{\"tk\":[817,23,817,24],\"els\":[\"0:11\"]},{\"tk\":[820,3,820,6],\"els\":[\"0:158\"]},{\"tk\":[820,7,820,11],\"els\":[\"0:158\"]},{\"tk\":[820,12,820,13],\"els\":[\"0:158\"]},{\"tk\":[820,14,820,17],\"els\":[\"0:158\"]},{\"tk\":[823,3,823,6],\"els\":[\"0:159\"]},{\"tk\":[823,7,823,11],\"els\":[\"0:159\"]},{\"tk\":[823,12,823,13],\"els\":[\"0:159\"]},{\"tk\":[823,14,823,18],\"els\":[\"0:159\"]},{\"tk\":[823,19,823,20],\"els\":[\"0:159\"]},{\"tk\":[823,20,823,21],\"els\":[\"0:159\"]},{\"tk\":[823,21,823,22],\"els\":[\"0:159\"]},{\"tk\":[826,3,826,6],\"els\":[\"0:161\"]},{\"tk\":[826,7,826,12],\"els\":[\"0:161\"]},{\"tk\":[826,13,826,14],\"els\":[\"0:161\"]},{\"tk\":[826,15,826,19],\"els\":[\"0:161\"]},{\"tk\":[826,20,826,21],\"els\":[\"0:161\"]},{\"tk\":[826,21,826,22],\"els\":[\"0:161\"]},{\"tk\":[826,22,826,23],\"els\":[\"0:161\"]},{\"tk\":[829,3,829,6],\"els\":[\"0:162\"]},{\"tk\":[829,7,829,12],\"els\":[\"0:162\"]},{\"tk\":[829,13,829,14],\"els\":[\"0:162\"]},{\"tk\":[829,15,829,19],\"els\":[\"0:162\"]},{\"tk\":[829,20,829,21],\"els\":[\"0:162\"]},{\"tk\":[829,21,829,22],\"els\":[\"0:162\"]},{\"tk\":[829,22,829,23],\"els\":[\"0:162\"]},{\"tk\":[832,3,832,6],\"els\":[\"0:152\"]},{\"tk\":[832,7,832,11],\"els\":[\"0:152\"]},{\"tk\":[832,12,832,13],\"els\":[\"0:152\"]},{\"tk\":[832,14,832,17],\"els\":[\"0:152\"]},{\"tk\":[835,3,835,6],\"els\":[\"0:156\"]},{\"tk\":[835,7,835,11],\"els\":[\"0:156\"]},{\"tk\":[835,12,835,13],\"els\":[\"0:156\"]},{\"tk\":[835,14,835,18],\"els\":[\"0:156\"]},{\"tk\":[835,19,835,20],\"els\":[\"0:156\"]},{\"tk\":[835,20,835,21],\"els\":[\"0:156\"]},{\"tk\":[835,21,835,22],\"els\":[\"0:156\"]},{\"tk\":[838,3,838,6],\"els\":[\"0:157\"]},{\"tk\":[838,7,838,11],\"els\":[\"0:157\"]},{\"tk\":[838,12,838,13],\"els\":[\"0:157\"]},{\"tk\":[838,14,838,18],\"els\":[\"0:157\"]},{\"tk\":[838,19,838,20],\"els\":[\"0:157\"]},{\"tk\":[838,20,838,21],\"els\":[\"0:157\"]},{\"tk\":[838,21,838,22],\"els\":[\"0:157\"]},{\"tk\":[850,3,850,6],\"els\":[\"0:158\"]},{\"tk\":[850,7,850,11],\"els\":[\"0:158\"]},{\"tk\":[850,12,850,13],\"els\":[\"0:158\"]},{\"tk\":[850,14,850,18],\"els\":[\"0:158\"]},{\"tk\":[850,19,850,20],\"els\":[\"0:158\"]},{\"tk\":[850,20,850,21],\"els\":[\"0:158\"]},{\"tk\":[850,21,850,22],\"els\":[\"0:158\"]},{\"tk\":[853,3,853,6],\"els\":[\"0:159\"]},{\"tk\":[853,7,853,11],\"els\":[\"0:159\"]},{\"tk\":[853,12,853,13],\"els\":[\"0:159\"]},{\"tk\":[853,14,853,18],\"els\":[\"0:159\"]},{\"tk\":[853,19,853,20],\"els\":[\"0:159\"]},{\"tk\":[853,20,853,21],\"els\":[\"0:159\"]},{\"tk\":[853,21,853,22],\"els\":[\"0:159\"]},{\"tk\":[856,3,856,6],\"els\":[\"0:161\"]},{\"tk\":[856,7,856,12],\"els\":[\"0:161\"]},{\"tk\":[856,13,856,14],\"els\":[\"0:161\"]},{\"tk\":[856,15,856,19],\"els\":[\"0:161\"]},{\"tk\":[856,20,856,21],\"els\":[\"0:161\"]},{\"tk\":[856,21,856,22],\"els\":[\"0:161\"]},{\"tk\":[856,22,856,23],\"els\":[\"0:161\"]},{\"tk\":[859,3,859,6],\"els\":[\"0:162\"]},{\"tk\":[859,7,859,12],\"els\":[\"0:162\"]},{\"tk\":[859,13,859,14],\"els\":[\"0:162\"]},{\"tk\":[859,15,859,19],\"els\":[\"0:162\"]},{\"tk\":[859,20,859,21],\"els\":[\"0:162\"]},{\"tk\":[859,21,859,22],\"els\":[\"0:162\"]},{\"tk\":[859,22,859,23],\"els\":[\"0:162\"]},{\"tk\":[862,3,862,6],\"els\":[\"0:152\"]},{\"tk\":[862,7,862,11],\"els\":[\"0:152\"]},{\"tk\":[862,12,862,13],\"els\":[\"0:152\"]},{\"tk\":[862,14,862,18],\"els\":[\"0:152\"]},{\"tk\":[862,19,862,20],\"els\":[\"0:152\"]},{\"tk\":[862,20,862,21],\"els\":[\"0:152\"]},{\"tk\":[862,21,862,22],\"els\":[\"0:152\"]},{\"tk\":[865,3,865,6],\"els\":[\"0:156\"]},{\"tk\":[865,7,865,11],\"els\":[\"0:156\"]},{\"tk\":[865,12,865,13],\"els\":[\"0:156\"]},{\"tk\":[865,14,865,18],\"els\":[\"0:156\"]},{\"tk\":[865,19,865,20],\"els\":[\"0:156\"]},{\"tk\":[865,20,865,21],\"els\":[\"0:156\"]},{\"tk\":[865,21,865,22],\"els\":[\"0:156\"]},{\"tk\":[868,3,868,6],\"els\":[\"0:157\"]},{\"tk\":[868,7,868,11],\"els\":[\"0:157\"]},{\"tk\":[868,12,868,13],\"els\":[\"0:157\"]},{\"tk\":[868,14,868,18],\"els\":[\"0:157\"]},{\"tk\":[868,19,868,20],\"els\":[\"0:157\"]},{\"tk\":[868,20,868,21],\"els\":[\"0:157\"]},{\"tk\":[868,21,868,22],\"els\":[\"0:157\"]}]}}}","blocks":[{"RTWName":"<S1>/In1","SIDString":"c_code_MR100:113"},{"RTWName":"<S1>/Demux","SIDString":"c_code_MR100:2"},{"RTWName":"<S1>/Demux1","SIDString":"c_code_MR100:3"},{"RTWName":"<S1>/Gain45","SIDString":"c_code_MR100:4"},{"RTWName":"<S1>/Gain46","SIDString":"c_code_MR100:5"},{"RTWName":"<S1>/Gain47","SIDString":"c_code_MR100:6"},{"RTWName":"<S1>/Gain48","SIDString":"c_code_MR100:7"},{"RTWName":"<S1>/Gain49","SIDString":"c_code_MR100:8"},{"RTWName":"<S1>/Gain50","SIDString":"c_code_MR100:9"},{"RTWName":"<S1>/Gain51","SIDString":"c_code_MR100:10"},{"RTWName":"<S1>/Gain52","SIDString":"c_code_MR100:11"},{"RTWName":"<S1>/Gain53","SIDString":"c_code_MR100:12"},{"RTWName":"<S1>/Gain54","SIDString":"c_code_MR100:13"},{"RTWName":"<S1>/Gain55","SIDString":"c_code_MR100:14"},{"RTWName":"<S1>/Gain56","SIDString":"c_code_MR100:15"},{"RTWName":"<S2>/time","SIDString":"c_code_MR100:17"},{"RTWName":"<S2>/Action Port","SIDString":"c_code_MR100:18"},{"RTWName":"<S2>/Constant4","SIDString":"c_code_MR100:23"},{"RTWName":"<S2>/Constant6","SIDString":"c_code_MR100:25"},{"RTWName":"<S2>/Data Type Conversion1","SIDString":"c_code_MR100:138"},{"RTWName":"<S2>/Data Type Conversion10","SIDString":"c_code_MR100:147"},{"RTWName":"<S2>/Data Type Conversion11","SIDString":"c_code_MR100:148"},{"RTWName":"<S2>/Data Type Conversion12","SIDString":"c_code_MR100:149"},{"RTWName":"<S2>/Data Type Conversion2","SIDString":"c_code_MR100:139"},{"RTWName":"<S2>/Data Type Conversion3","SIDString":"c_code_MR100:140"},{"RTWName":"<S2>/Data Type Conversion4","SIDString":"c_code_MR100:141"},{"RTWName":"<S2>/Data Type Conversion5","SIDString":"c_code_MR100:142"},{"RTWName":"<S2>/Data Type Conversion6","SIDString":"c_code_MR100:143"},{"RTWName":"<S2>/Data Type Conversion7","SIDString":"c_code_MR100:144"},{"RTWName":"<S2>/Data Type Conversion8","SIDString":"c_code_MR100:145"},{"RTWName":"<S2>/Data Type Conversion9","SIDString":"c_code_MR100:146"},{"RTWName":"<S2>/Gain1","SIDString":"c_code_MR100:36"},{"RTWName":"<S2>/Gain14","SIDString":"c_code_MR100:37"},{"RTWName":"<S2>/Gain2","SIDString":"c_code_MR100:38"},{"RTWName":"<S2>/Gain3","SIDString":"c_code_MR100:39"},{"RTWName":"<S2>/Gain4","SIDString":"c_code_MR100:40"},{"RTWName":"<S2>/Gain40","SIDString":"c_code_MR100:41"},{"RTWName":"<S2>/Gain41","SIDString":"c_code_MR100:42"},{"RTWName":"<S2>/Gain42","SIDString":"c_code_MR100:43"},{"RTWName":"<S2>/Gain43","SIDString":"c_code_MR100:44"},{"RTWName":"<S2>/Gain44","SIDString":"c_code_MR100:45"},{"RTWName":"<S2>/Gain5","SIDString":"c_code_MR100:46"},{"RTWName":"<S2>/Lookup_Table1","SIDString":"c_code_MR100:26"},{"RTWName":"<S2>/Lookup_Table10","SIDString":"c_code_MR100:35"},{"RTWName":"<S2>/Lookup_Table2","SIDString":"c_code_MR100:27"},{"RTWName":"<S2>/Lookup_Table3","SIDString":"c_code_MR100:28"},{"RTWName":"<S2>/Lookup_Table4","SIDString":"c_code_MR100:29"},{"RTWName":"<S2>/Lookup_Table5","SIDString":"c_code_MR100:30"},{"RTWName":"<S2>/Lookup_Table6","SIDString":"c_code_MR100:31"},{"RTWName":"<S2>/Lookup_Table7","SIDString":"c_code_MR100:32"},{"RTWName":"<S2>/Lookup_Table8","SIDString":"c_code_MR100:33"},{"RTWName":"<S2>/Lookup_Table9","SIDString":"c_code_MR100:34"},{"RTWName":"<S2>/Mux3","SIDString":"c_code_MR100:53"},{"RTWName":"<S2>/Mux4","SIDString":"c_code_MR100:54"},{"RTWName":"<S2>/L_foot_joint1","SIDString":"c_code_MR100:58"},{"RTWName":"<S2>/R_foot_joint1","SIDString":"c_code_MR100:59"},{"RTWName":"<S3>/time","SIDString":"c_code_MR100:61"},{"RTWName":"<S3>/Action Port","SIDString":"c_code_MR100:62"},{"RTWName":"<S3>/Add1","SIDString":"c_code_MR100:63"},{"RTWName":"<S3>/Constant1","SIDString":"c_code_MR100:64"},{"RTWName":"<S3>/Constant2","SIDString":"c_code_MR100:65"},{"RTWName":"<S3>/Constant3","SIDString":"c_code_MR100:66"},{"RTWName":"<S3>/Constant4","SIDString":"c_code_MR100:67"},{"RTWName":"<S3>/Data Type Conversion","SIDString":"c_code_MR100:126"},{"RTWName":"<S3>/Data Type Conversion1","SIDString":"c_code_MR100:127"},{"RTWName":"<S3>/Data Type Conversion10","SIDString":"c_code_MR100:136"},{"RTWName":"<S3>/Data Type Conversion11","SIDString":"c_code_MR100:137"},{"RTWName":"<S3>/Data Type Conversion2","SIDString":"c_code_MR100:128"},{"RTWName":"<S3>/Data Type Conversion3","SIDString":"c_code_MR100:129"},{"RTWName":"<S3>/Data Type Conversion4","SIDString":"c_code_MR100:130"},{"RTWName":"<S3>/Data Type Conversion5","SIDString":"c_code_MR100:131"},{"RTWName":"<S3>/Data Type Conversion6","SIDString":"c_code_MR100:132"},{"RTWName":"<S3>/Data Type Conversion7","SIDString":"c_code_MR100:133"},{"RTWName":"<S3>/Data Type Conversion8","SIDString":"c_code_MR100:134"},{"RTWName":"<S3>/Data Type Conversion9","SIDString":"c_code_MR100:135"},{"RTWName":"<S3>/Gain","SIDString":"c_code_MR100:78"},{"RTWName":"<S3>/Gain1","SIDString":"c_code_MR100:79"},{"RTWName":"<S3>/Gain2","SIDString":"c_code_MR100:80"},{"RTWName":"<S3>/Gain3","SIDString":"c_code_MR100:81"},{"RTWName":"<S3>/Gain4","SIDString":"c_code_MR100:82"},{"RTWName":"<S3>/Gain40","SIDString":"c_code_MR100:83"},{"RTWName":"<S3>/Gain41","SIDString":"c_code_MR100:84"},{"RTWName":"<S3>/Gain42","SIDString":"c_code_MR100:85"},{"RTWName":"<S3>/Gain43","SIDString":"c_code_MR100:86"},{"RTWName":"<S3>/Gain44","SIDString":"c_code_MR100:87"},{"RTWName":"<S3>/Gain5","SIDString":"c_code_MR100:88"},{"RTWName":"<S3>/Gain6","SIDString":"c_code_MR100:89"},{"RTWName":"<S3>/Lookup_Table_else1","SIDString":"c_code_MR100:68"},{"RTWName":"<S3>/Lookup_Table_else10","SIDString":"c_code_MR100:77"},{"RTWName":"<S3>/Lookup_Table_else2","SIDString":"c_code_MR100:69"},{"RTWName":"<S3>/Lookup_Table_else3","SIDString":"c_code_MR100:70"},{"RTWName":"<S3>/Lookup_Table_else4","SIDString":"c_code_MR100:71"},{"RTWName":"<S3>/Lookup_Table_else5","SIDString":"c_code_MR100:72"},{"RTWName":"<S3>/Lookup_Table_else6","SIDString":"c_code_MR100:73"},{"RTWName":"<S3>/Lookup_Table_else7","SIDString":"c_code_MR100:74"},{"RTWName":"<S3>/Lookup_Table_else8","SIDString":"c_code_MR100:75"},{"RTWName":"<S3>/Lookup_Table_else9","SIDString":"c_code_MR100:76"},{"RTWName":"<S3>/Math\nFunction","SIDString":"c_code_MR100:90"},{"RTWName":"<S3>/Mux3","SIDString":"c_code_MR100:91"},{"RTWName":"<S3>/Mux4","SIDString":"c_code_MR100:92"},{"RTWName":"<S3>/Saturation2","SIDString":"c_code_MR100:93"},{"RTWName":"<S3>/L_foot_joint1","SIDString":"c_code_MR100:94"},{"RTWName":"<S3>/R_foot_joint1","SIDString":"c_code_MR100:95"},{"RTWName":"<S1>/If1","SIDString":"c_code_MR100:96"},{"RTWName":"<S1>/L1","SIDString":"c_code_MR100:97"},{"RTWName":"<S1>/R1","SIDString":"c_code_MR100:98"},{"RTWName":"<S1>/Rate Transition2","SIDString":"c_code_MR100:99"},{"RTWName":"<S1>/Out1","SIDString":"c_code_MR100:114"},{"RTWName":"<S1>/Out2","SIDString":"c_code_MR100:115"},{"RTWName":"<S1>/Out3","SIDString":"c_code_MR100:116"},{"RTWName":"<S1>/Out4","SIDString":"c_code_MR100:117"},{"RTWName":"<S1>/Out5","SIDString":"c_code_MR100:118"},{"RTWName":"<S1>/Out6","SIDString":"c_code_MR100:119"},{"RTWName":"<S1>/Out7","SIDString":"c_code_MR100:120"},{"RTWName":"<S1>/Out8","SIDString":"c_code_MR100:121"},{"RTWName":"<S1>/Out9","SIDString":"c_code_MR100:122"},{"RTWName":"<S1>/Out10","SIDString":"c_code_MR100:123"},{"RTWName":"<S1>/Out11","SIDString":"c_code_MR100:124"},{"RTWName":"<S1>/Out12","SIDString":"c_code_MR100:125"},{"RTWName":"<Root>/Subsystem","SIDString":"c_code_MR100:112"},{"RTWName":"<S1>/If Action\nSubsystem2","SIDString":"c_code_MR100:16"},{"RTWName":"<S1>/If Action\nSubsystem3","SIDString":"c_code_MR100:60"}],"coverage":[{"id":"SimulinkCoverage","name":"Simulink Coverage","files":[]},{"id":"Bullseye","name":"Bullseye Coverage","files":[]},{"id":"LDRA","name":"LDRA Testbed","files":[]}],"features":{"annotation":false,"coverage":true,"profiling":true,"tooltip":true,"coverageTooltip":true,"showJustificationLinks":true,"useMWTable":false,"showProfilingInfo":true,"showTaskSummary":true}};